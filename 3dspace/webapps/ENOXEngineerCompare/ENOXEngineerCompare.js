define("DS/ENOXEngineerCompare/compare/plugins/ConstantsDefs",[],()=>({CONT_RAWMAT_QUANTITY_LENGTH_INST:"ro.VPMInstanceQuantity_Length.V_ContQuantity",CONT_RAWMAT_QUANTITY_MASS_INST:"ro.VPMInstanceQuantity_Mass.V_ContQuantity",CONT_RAWMAT_QUANTITY_AREA_INST:"ro.VPMInstanceQuantity_Area.V_ContQuantity",CONT_RAWMAT_QUANTITY_VOLUME_INST:"ro.VPMInstanceQuantity_Volume.V_ContQuantity",CONT_RAWMAT_QUANTITY_ASREQ_INST:"ro.VPMInstanceQuantity_AsRequired.AsRequired",CONVERTED_FLAG:"_converted",INST_QUANTITY_KEY:"INST.Quant",RINODE_QUANTITY_DEST_PROP_NUMERIC:"REF.Quant",DIMENSIONS:{VOLUME:"VOLUME",MASS:"MASS",AREA:"AREA",LENGTH:"LENGTH"},DEFAULT_MKS_UNITS:{LENGTH:"METER",AREA:"METER2",MASS:"KILOGRAM",VOLUME:"METER3"},commands:{getCsrf:{url:"/resources/v1/application/E6WFoundation/CSRF",method:"GET",type:"json",targetService:"3DSpace",isChangeControlled:!1},getRawMaterialInstances:{url:"/resources/v1/ContinuousQuantity/PhysicalProduct/QtyInstance:ContinuousQuantities",method:"POST",type:"json",targetService:"3DSpace",sc_tenant_in_url:!0,isChangeControlled:!1,useCSRF:!0},getDimensions:{url:"/resources/dictionary/dimensions?xrequestedwith=xmlhttprequest",method:"GET",type:"json",targetService:"3DSpace",noContentType:!0,isChangeControlled:!1},convertValues:{url:"/resources/v1/engineeringItem/convertValues",method:"POST",type:"json",targetService:"3DSpace",isChangeControlled:!1}}})),define("DS/ENOXEngineerCompare/compare/plugins/XENCompareHTTPClient",["UWA/Core","DS/ENOXEngineerCommonUtils/XENGenericHttpClient","DS/ENOXEngineerCommonUtils/XENCommonConstants"],(e,t,r)=>{return Object.assign(e.clone(t,!0),{decorateWithAddtionnaloptions(e,t){t.noSecurityContextNeeded||t.targetService!==r.SERVICE_3DSPACE_NAME||(e.headers.SecurityContext=encodeURIComponent(`${this.getSecurityContext()}`))},setServiceURL(e){this.serviceURL=e},setSecurityContext(e){this.securityContext=e},getSecurityContext(){return this.securityContext},buildUrl(e){return`${this.serviceURL}${e.url}`}})}),define("DS/ENOXEngineerCompare/compare/plugins/i18nManager",["i18n!DS/ENOXEngineerCompare/assets/nls/ENOXEngineerCompare.json"],e=>{return{get:t=>e.get(t)||t}}),define("DS/ENOXEngineerCompare/compare/plugins/FetchUnitsDimensionsService",["DS/ENOXEngineerCommonUtils/XENPlatform3DXSettings","DS/ENOXEngineerCompare/compare/plugins/XENCompareHTTPClient","DS/ENOXEngineerCompare/compare/plugins/ConstantsDefs"],(e,t,r)=>{const{commands:n}=r;return class{static async fetch(e){const{serviceName:r,securityContext:s}=e||{};if(!r||!s)throw new Error("FetchUnitsDimensionsService.fetch, invalid input, missing serviceName or securityContext");const i=await this.retreiveServiceUrl(r);return t.setSecurityContext(s),t.setServiceURL(i),await t.perform(n.getDimensions)}static async retreiveServiceUrl(t){if(await e.discoverRelated3DXPlatform(),"3dspace"===t.toLowerCase())return e.getDefault3DSpaceUrl();throw new Error(`retreiveServiceUrl [${t}] fails`)}}}),define("DS/ENOXEngineerCompare/compare/plugins/ConvertRawMaterialService",["DS/ENOXEngineerCommonUtils/XENPlatform3DXSettings","DS/ENOXEngineerCompare/compare/plugins/XENCompareHTTPClient","DS/ENOXEngineerCompare/compare/plugins/ConstantsDefs"],(e,t,r)=>{const{commands:n}=r;return class{static async fetch(e,r){const[s]=e,{dbContext:i}=s||{},{serviceName:a,securityContext:o}=i||{};if(!a||!o)throw new Error("ConvertRawMaterialService.fetch, invalid input, missing serviceName or securityContext");const c=this.getDimensionToValuesFromInputs(e),T=this.buildPayload(c,r),l=this.buildPayloadWithoutMKS(T),S=await this.retreiveServiceUrl(a);return t.setSecurityContext(o),t.setServiceURL(S),{result:await t.perform(n.convertValues,l)}}static getDimensionToValuesFromInputs(e){const t={};return Reflect.ownKeys(r.DIMENSIONS).forEach(e=>{t[e]=new Set}),e.reduce((e,t)=>(Array.isArray(t.convertInputs)&&t.convertInputs.forEach(t=>{const{value:r,dimension:n}=t;e[n].add(r)}),e),t)}static buildPayload(e,t){const n=[];return Reflect.ownKeys(r.DIMENSIONS).forEach(r=>{if(e[r].size){const s={dimension:r,values:[...e[r]],toUnit:t[r]};n.push(s)}}),n}static buildPayloadWithoutMKS(e){return e.filter(e=>{const{dimension:t,toUnit:n}=e;return n!==r.DEFAULT_MKS_UNITS[t]})}static async retreiveServiceUrl(t){if(await e.discoverRelated3DXPlatform(),"3dspace"===t.toLowerCase())return e.getDefault3DSpaceUrl();throw new Error(`retreiveServiceUrl [${t}] fails`)}}}),define("DS/ENOXEngineerCompare/compare/plugins/PreferencesManager",["DS/ENOXEngineerCompare/compare/plugins/FetchUnitsDimensionsService","DS/ENOXEngineerCompare/compare/plugins/ConstantsDefs"],(e,t)=>{class r{static async get(n){const{dbContext:s,preferedUnits:i}=n;return this.dimensions||(this.dimensions=await e.fetch(s)),new r({dimensions:this.dimensions,preferedUnits:i||t.DEFAULT_MKS_UNITS})}constructor(e){this.preferences=e}getNLSValueForVolumeQuantity(){return this.getPreferedUnitforDimensionAsNls(t.DIMENSIONS.VOLUME)}getNLSValueForMassQuantity(){return this.getPreferedUnitforDimensionAsNls(t.DIMENSIONS.MASS)}getNLSValueForAreaQuantity(){return this.getPreferedUnitforDimensionAsNls(t.DIMENSIONS.AREA)}getNLSValueForLengthQuantity(){return this.getPreferedUnitforDimensionAsNls(t.DIMENSIONS.LENGTH)}getPreferedUnitforDimensionAsNls(e){const t=this.getPreferedUnitforDimension(e);return this.getNlsUnit(t,e)}getPreferedUnitforDimension(e){return this.preferences.preferedUnits[e]}getNlsUnit(e,t){let r;const n=this.getDimensionProperties(t),{Units:s}=n||{};if(Array.isArray(s)&&"string"==typeof e){const t=s.find(t=>t.Name===e),{NLSName:n}=t||{};"string"==typeof n&&n.trim().length&&(r=n)}return r}getDimensionProperties(e){return this.dimensions.find(t=>t.Name===e)}get dimensions(){return this.preferences.dimensions.results}}return r}),define("DS/ENOXEngineerCompare/compare/plugins/Utils",["DS/ENOXEngineerCompare/compare/plugins/ConstantsDefs","DS/CompareWidget2/plugins/STRUCTURE/refInstTree/refInst_tree","DS/CompareWidget2/plugins/STRUCTURE/refInstTree/dbObj","DS/CompareWidget2/plugins/STRUCTURE/refInstTree/refInst_node","DS/ENOXEngineerCompare/compare/plugins/PreferencesManager","DS/ENOXEngineerCompare/compare/plugins/i18nManager"],(e,t,r,n,s,i)=>{const a=[e.CONT_RAWMAT_QUANTITY_LENGTH_INST,e.CONT_RAWMAT_QUANTITY_MASS_INST,e.CONT_RAWMAT_QUANTITY_AREA_INST,e.CONT_RAWMAT_QUANTITY_VOLUME_INST,e.CONT_RAWMAT_QUANTITY_ASREQ_INST],o=[e.CONT_RAWMAT_QUANTITY_LENGTH_INST,e.CONT_RAWMAT_QUANTITY_MASS_INST,e.CONT_RAWMAT_QUANTITY_AREA_INST,e.CONT_RAWMAT_QUANTITY_VOLUME_INST];class c{static isARawMaterialInstance(e){const t=e.get_dbObj_INST?e.get_dbObj_INST():null;return!!t&&-1!==a.findIndex(e=>t.getAttr(e))}static isARawMaterialInstanceWithQuantity(e){const t=e.get_dbObj_INST?e.get_dbObj_INST():null;return!!t&&-1!==o.findIndex(e=>t.getAttr(e))}static getRawMaterialInstanceValuatedAttribute(e){const t=c.getRawMaterialInstanceAttributes(e);if(!Array.isArray(t))return null;const[r]=t.filter(e=>-1!==o.indexOf(e));return r}static getRawMaterialInstanceAttributes(e){const t=e.get_dbObj_INST?e.get_dbObj_INST():null;return t?a.filter(e=>t.getAttr(e)):null}static getRawMaterialInstanceAttributeValue(e,t){return e.get_dbObj_INST()?e.get_dbObj_INST().getAttr(t):null}static getRawMaterialInstanceAttributeDimension(t){let r=null;switch(t){case e.CONT_RAWMAT_QUANTITY_LENGTH_INST:r=e.DIMENSIONS.LENGTH;break;case e.CONT_RAWMAT_QUANTITY_MASS_INST:r=e.DIMENSIONS.MASS;break;case e.CONT_RAWMAT_QUANTITY_AREA_INST:r=e.DIMENSIONS.AREA;break;case e.CONT_RAWMAT_QUANTITY_VOLUME_INST:r=e.DIMENSIONS.VOLUME;break;default:r=null}return r}static setConvertedInstanceQuantityValue(t,r,n){return t.setAttr(`INST.${r}${e.CONVERTED_FLAG}`,n)}static hasConvertedInstanceQuantity(t,r){const n=t.get_dbObj_INST?t.get_dbObj_INST():null;if(!n)return!1;const s=`${r}${e.CONVERTED_FLAG}`,i=n.getAttrList();return Reflect.has(i,s)}static getConvertedInstanceQuantity(t,r){const n=`${r}${e.CONVERTED_FLAG}`;return c.getRawMaterialInstanceAttributeValue(t,n)}static findAll(e,t){if(!e||"function"!=typeof t)return[];const r=[];t(e)&&r.push(e);const n=e.getChildArray?e.getChildArray():[];return Array.isArray(n)&&n.forEach(e=>{r.push(...c.findAll(e,t))}),r}static getRootFromRITree(e){return e.getRoot()}static getNodeDBContext(e){return e.getDBContext()}static getInstancePhysicalID(e){return e.get_dbObj_INST()?e.get_dbObj_INST().getAttr("physicalid"):null}static getInstanceLabel(e){return e.get_dbObj_INST()?e.get_dbObj_INST().getAttr("ro.plminstance.plm_externalid"):null}static getReferencePhysicalID(e){return e.get_dbObj_REF()?e.get_dbObj_REF().getAttr("physicalid"):null}static getReferenceLabel(e){return e.get_dbObj_REF()?e.get_dbObj_REF().getAttr("ds6w:label"):null}static setInstanceQuantity(t,r){t.setAttr(e.INST_QUANTITY_KEY,r)}static convert(e,t){return t(e)}static ObjectInstTreesWithRawInstancesToFetchInput(e){return e.map(e=>{const{root:t,rawMaterialInstances:r}=e;return{dbContext:t.getDBContext(),rawInstancesPhysicalIds:r.map(e=>c.getInstancePhysicalID(e))}})}static ObjectInstTreesWithRawInstancesToUnitConvertInput(e){return e.map(e=>{const{root:t,rawMaterialInstances:r}=e;return{dbContext:t.getDBContext(),convertInputs:r.map(e=>{const t=c.getRawMaterialInstanceValuatedAttribute(e),r=c.getRawMaterialInstanceAttributeValue(e,t),n={pid:c.getInstancePhysicalID(e),value:r,sixw:`${t}-Instance`};return n.dimension=c.getRawMaterialInstanceAttributeDimension(t),n})}})}static update(e,t,...r){return t(e,...r)}static ObjectInstTreesWithRawInstancesWithFetchResults(e,t){const r=e.reduce((e,{rawMaterialInstances:t})=>(e.push(...t),e),[]);t.forEach(e=>{const t=[],{quantity:n}=e;if(n){const{quantityUOM:r}=e,{nlsLabel:s}=r;t.push(`${n} ${s}`)}Reflect.has(e,"asRequired")&&t.push(i.get("makeFromAsRequired"));const s=t.join(", "),{instanceId:a}=e;r.filter(e=>c.getInstancePhysicalID(e)===a).forEach(e=>c.setInstanceQuantity(e,s))})}static ObjectInstTreesWithRawInstancesWithConvertResults(e,t){e.reduce((e,{rawMaterialInstances:t})=>(e.push(...t),e),[]).forEach(e=>{const r=c.getRawMaterialInstanceValuatedAttribute(e),n=c.getRawMaterialInstanceAttributeDimension(r),s=t.find(e=>e.dimension===n),i=s?s.values:null;if(Array.isArray(i)&&i.length){const t=c.getRawMaterialInstanceAttributeValue(e,r),n=i.find(e=>e.from===t);n&&c.setConvertedInstanceQuantityValue(e,r,n.to)}})}static getAllChildren(e){const t=[];return e.visit_subtreeAndFN(e=>{const r=e.getChildArray();return t.push(...r),!0}),t}static removeAllChildren(e){e.rmAllChildren()}static reparent(e,t){e.setParent(t,!0),t.addChild(e)}static removeInstanceNode(e){e.get_dbObj_INST()&&e.set_dbObj_INST(null)}static setUsages(e,t){e.usages=Array.isArray(t)?t:[]}static getUsages(e){return e.isRoot()?[]:Array.isArray(e.usages)?e.usages:[e]}static createADummyTree(e){const r=e.getObjIDSpec().makeDupe();return new t(r)}static createADummyRoot(){const e=new r;return new n(e,null)}static setRollUp(t,r){t.setAttr(e.RINODE_QUANTITY_DEST_PROP_NUMERIC,r)}static getRollUp(t){return t.getAttr(e.RINODE_QUANTITY_DEST_PROP_NUMERIC)}static getReferenceGlobalType(e){return e.get_dbObj_REF().getAttr("ds6w:globaltype")}static async initPreferenceManager(e,t){const[r]=e||[],n=this.getRootFromRITree(r),i=this.getNodeDBContext(n);return await s.get({dbContext:i,preferedUnits:t})}static getPreferedUnitsFromPlugin(e){const t=e._plugSvcs.getUserRunOptions()||{},{PreferencesManager:r}=t||{},{units:n}=r||this.getDefaultMKSUnitsManager();return n}static getDefaultMKSUnitsManager(){return{units:{LENGTH:e.DEFAULT_MKS_UNITS.LENGTH,AREA:e.DEFAULT_MKS_UNITS.AREA,MASS:e.DEFAULT_MKS_UNITS.MASS,VOLUME:e.DEFAULT_MKS_UNITS.VOLUME}}}}return c}),define("DS/ENOXEngineerCompare/compare/plugins/ConvertRawMaterialInstanceQuantity",["DS/CompareWidget2/plugins/plugin","DS/ENOXEngineerCompare/compare/plugins/ConvertRawMaterialService","DS/ENOXEngineerCompare/compare/plugins/Utils","DS/ENOXEngineerCompare/compare/plugins/ConstantsDefs"],(e,t,r,n)=>{const s=e=>{return"string"==typeof e&&e.trim().length>0},i="ConvertRawMaterialInstanceQuantity";return e.extend({init(e,t,r,n){this._parent(e,t,r,n)},execute(e,n){if(this._parent(e,n),!this.hasUnitsConversionToBeDone())return void this.reportOK(e);const s=e.map(e=>{const t=r.getRootFromRITree(e);return{objInstTree:e,root:t,rawMaterialInstances:r.findAll(t,r.isARawMaterialInstanceWithQuantity)}}).filter(({rawMaterialInstances:e})=>e.length);if(!s.length)return void this.reportOK(e);const a=r.convert(s,r.ObjectInstTreesWithRawInstancesToUnitConvertInput),o=Date.now();this.dbgout(i,`start fetching raw instances properties ${a}`),t.fetch(a,this.getPreferedUnits()).then(e=>{const{result:t}=e;r.update(s,r.ObjectInstTreesWithRawInstancesWithConvertResults,t)}).catch(e=>{}).finally(()=>{const t=Date.now();this.dbgout(i,`raw instances properties received in ${t-o} ms`),this.reportOK(e)})},hasUnitsConversionToBeDone(){const{LENGTH:e,AREA:t,MASS:r,VOLUME:i}=this.getPreferedUnits();return!(!s(e)||e===n.DEFAULT_MKS_UNITS.LENGTH)||(!(!s(t)||t===n.DEFAULT_MKS_UNITS.AREA)||(!(!s(r)||r===n.DEFAULT_MKS_UNITS.MASS)||!(!s(i)||i===n.DEFAULT_MKS_UNITS.VOLUME)))},getPreferedUnits(){return r.getPreferedUnitsFromPlugin(this)}})}),define("DS/ENOXEngineerCompare/compare/plugins/ConvertTools",["DS/ENOXEngineerCompare/compare/plugins/Utils"],e=>{const t={convertRITree(t,r){if(!t||"function"!=typeof r)throw new Error("convertRITree invalid input");let n=null;try{const s=r(e.getRootFromRITree(t)),i=e.createADummyTree(t);i.setRoot(s),n=i}catch(e){throw new Error(`convertRITree fails ${e}`)}return n},convertRINodeAsRefUsageNode:(t,r)=>(r(t).forEach(r=>{const{reference:n,usages:s}=r,i=n;e.reparent(i,t),e.setUsages(i,s)}),t),convertRefAndChildrenAsFlatList(t){const r=e.createADummyRoot(),n=Array.isArray(t.getChildArray())?t.getChildArray():[];return e.removeAllChildren(t),[t,...n].forEach(t=>{e.reparent(t,r)}),r}},r={convertRINodesAsRefUsages(t){const r={};t.forEach(t=>{const n=t.makeDupe(),s=e.getReferencePhysicalID(n);r[s]?r[s].usages.push(n):r[s]={reference:t,usages:[n]}});const n=[];return Reflect.ownKeys(r).forEach(e=>{const t=r[e];n.push({id:e,...t})}),n},getFirstLevelChildren(t){const n=t.getChildArray().map(e=>e.makeDupe()),s=r.convertRINodesAsRefUsages(n);return e.removeAllChildren(t),s},getAllChildren(t){const n=e.getAllChildren(t),s=r.convertRINodesAsRefUsages(n);return e.removeAllChildren(t),n.forEach(t=>{e.removeAllChildren(t)}),s}},n={convertChildrenAsFirstLevelRefUsageNodes(s){const i=t.convertRINodeAsRefUsageNode(s,r.getFirstLevelChildren);return i.getChildArray().forEach(e=>n.convertChildrenAsFirstLevelRefUsageNodes(e,r.getFirstLevelChildren)),e.removeInstanceNode(i),i},convertChildrenAsAllLevelRefUsageNodes:e=>t.convertRINodeAsRefUsageNode(e,r.getAllChildren),convertRefAndChildrenAsFlatList(n){const s=t.convertRINodeAsRefUsageNode(n,r.getAllChildren),i=t.convertRefAndChildrenAsFlatList(s);return i.getChildArray().forEach(t=>{e.removeInstanceNode(t)}),i}};return class{static convertRITreeAsFirstLevelRefUsageNodes(e){return t.convertRITree(e,n.convertChildrenAsFirstLevelRefUsageNodes)}static convertRITreeAsAllLevelRefUsageNodes(e){return t.convertRITree(e,n.convertChildrenAsAllLevelRefUsageNodes)}static convertRITreeAsAllRefFlatten(e){return t.convertRITree(e,n.convertRefAndChildrenAsFlatList)}}}),define("DS/ENOXEngineerCompare/compare/plugins/FetchRawMaterialService",["DS/ENOXEngineerCommonUtils/XENPlatform3DXSettings","DS/ENOXEngineerCompare/compare/plugins/XENCompareHTTPClient","DS/ENOXEngineerCompare/compare/plugins/ConstantsDefs"],(e,t,r)=>{const{commands:n}=r;return class{static async fetch(e){const[r]=e,{dbContext:s}=r||{},{serviceName:i,securityContext:a}=s||{};if(!i||!a)throw new Error("FetchRawMaterialService.fetch, invalid input, missing serviceName or securityContext");const o=e.reduce((e,t)=>(Array.isArray(t.rawInstancesPhysicalIds)&&t.rawInstancesPhysicalIds.length&&e.push(...t.rawInstancesPhysicalIds),e),[]);if(!o.length)throw new Error("FetchRawMaterialService.fetch, missing instance physicalids");const c=await this.retreiveServiceUrl(i);t.setSecurityContext(a),t.setServiceURL(c);const{csrf:T}=await t.perform(n.getCsrf,""),l={instanceIds:o};return await t.perform(n.getRawMaterialInstances,l,T)}static async retreiveServiceUrl(t){if(await e.discoverRelated3DXPlatform(),"3dspace"===t.toLowerCase())return e.getDefault3DSpaceUrl();throw new Error(`retreiveServiceUrl [${t}] fails`)}}}),define("DS/ENOXEngineerCompare/compare/plugins/FetchRawMaterialInstanceQuantity",["DS/CompareWidget2/plugins/plugin","DS/ENOXEngineerCompare/compare/plugins/FetchRawMaterialService","DS/ENOXEngineerCompare/compare/plugins/Utils"],(e,t,r)=>{const n="FetchRawMaterialInstanceQuantity";return e.extend({init(e,t,r,n){this._parent(e,t,r,n)},execute(e,s){this._parent(e,s);const i=e.map(e=>{const t=r.getRootFromRITree(e);return{objInstTree:e,root:t,rawMaterialInstances:r.findAll(t,r.isARawMaterialInstance)}}).filter(({rawMaterialInstances:e})=>e.length);if(!i.length)return void this.reportOK(e);const a=r.convert(i,r.ObjectInstTreesWithRawInstancesToFetchInput),o=Date.now();this.dbgout(n,`start fetching raw instances properties ${a}`),t.fetch(a).then(e=>{const{result:t}=e;r.update(i,r.ObjectInstTreesWithRawInstancesWithFetchResults,t)}).catch(e=>{}).finally(()=>{const t=Date.now();this.dbgout(n,`raw instances properties received in ${t-o} ms`),this.reportOK(e)})}})}),define("DS/ENOXEngineerCompare/compare/plugins/RollUpTools",["DS/ENOXEngineerCompare/compare/plugins/Utils","DS/ENOXEngineerCompare/compare/plugins/ConstantsDefs","DS/ENOXEngineerCommonUtils/QuantityHelper/EngItemRollupQuantity","DS/ENOXEngineerCompare/compare/plugins/i18nManager"],(e,t,r,n)=>{class s{constructor(r,n=!1){if(this.riNode=r,this.options={grid:{}},n&&this.isRawMaterialType()){e.getRawMaterialInstanceAttributes(r).forEach(n=>{const s=e.getRawMaterialInstanceAttributeValue(r,n),i=`${n}-Instance`;if(this.options.grid[i]=s,e.hasConvertedInstanceQuantity(r,n)){const s=e.getConvertedInstanceQuantity(r,n),a=`${i}${t.CONVERTED_FLAG}`;this.options.grid[a]=s}})}}isCoreMaterialType(){return!1}isRawMaterialType(){if(e.isARawMaterialInstance(this.riNode))return!0;return-1!==e.getUsages(this.riNode).findIndex(t=>e.isARawMaterialInstance(t))}isEngineeringItem(){return"ds6w:Part"===e.getReferenceGlobalType(this.riNode)}getUsages(){return e.getUsages(this.riNode).map(e=>new s(e,!0))}}const i={computeFromUsages(e,t){let n=null;const{usages:i}=e;if(Array.isArray(i)&&i.length){const i=new s(e);n=new r(i,t).getRollup()}return n}},a={init(e){return this.preferencesManager=e,{PreferencesManager:this.preferencesManager,i18nManager:{get:e=>n.get(e)}}}};return class{static computeRollUp(t,r){const n=a.init(r);t.visit_riTreeAndFN(t=>{const r=i.computeFromUsages(t,n);return r&&e.setRollUp(t,r),!0})}}}),define("DS/ENOXEngineerCompare/compare/plugins/XENStructAgg_PLUGIN",["DS/CompareWidget2/plugins/STRUCTURE/flexibleView/STRUCT_AGG_LIST_plugin","DS/ENOXEngineerCompare/compare/plugins/Utils","DS/ENOXEngineerCompare/compare/plugins/RollUpTools"],(e,t,r)=>{return e.extend({doAggregate(e,n,s){return new Promise((n,s)=>{const i=[],a=this.getPreferedUnits();t.initPreferenceManager(e,a).then(t=>{e.forEach(e=>{const n=this.convertRITree(e);r.computeRollUp(n,t),i.push(n)})}).finally(()=>{n(i)})})},convertRITree(){throw new Error("missing implementation")},getPreferedUnits(){return t.getPreferedUnitsFromPlugin(this)}})}),define("DS/ENOXEngineerCompare/compare/plugins/XENStructAgg_TREE_LIST",["DS/ENOXEngineerCompare/compare/plugins/XENStructAgg_PLUGIN","DS/ENOXEngineerCompare/compare/plugins/ConvertTools"],(e,t)=>{return e.extend({convertRITree:e=>t.convertRITreeAsFirstLevelRefUsageNodes(e)})}),define("DS/ENOXEngineerCompare/compare/plugins/XENStructAgg_LIST",["DS/ENOXEngineerCompare/compare/plugins/XENStructAgg_PLUGIN","DS/ENOXEngineerCompare/compare/plugins/ConvertTools"],(e,t)=>{return e.extend({convertRITree:e=>t.convertRITreeAsAllRefFlatten(e)})}),define("DS/ENOXEngineerCompare/compare/plugins/XENViewDefOptions",["DS/CompareWidget2/ViewDefModules/FlexibleViewDefOptions","DS/CompareWidget2/ViewDefModules/ViewDefOptions","i18n!DS/CompareWidget2/assets/nls/FlexibleView","DS/ENOXEngineerCompare/compare/plugins/i18nManager","DS/ENOXEngineerCompare/compare/plugins/ConstantsDefs"],(e,t,r,n,s)=>{const i={REVISION:"REF.Revision",INST_TITLE:"INST.ds6w:label",INST_QUANT:s.INST_QUANTITY_KEY},a={QUANT:{NAME:s.INST_QUANTITY_KEY,ICON:{iconName:"flow-cascade",fontIconFamily:WUXManagedFontIcons.Font3DS},NLS_RESOLVED:r.Quant}},o={...t.STRUCT_COMPARE_OPTIONS,PROPS:{...t.STRUCT_COMPARE_OPTIONS.PROPS,RAW_INST_QUANTITY:i.INST_QUANT},CUSTOM_MATCH_ADJUSTMENTS:[...t.STRUCT_COMPARE_OPTIONS.CUSTOM_MATCH_ADJUSTMENTS,{NAME:"QUANT_STATUS",PROPS:["RAW_INST_QUANTITY","RAW_INST_QUANTITY"],FLAG_ON:"NEQ",IS_VISIBLE:!0,MATCH_ADJ:-2}]},c={...e.STRUCT_DISPLAY_PREP_TREE,CUSTOM_PROPS:{...e.STRUCT_DISPLAY_PREP_TREE.CUSTOM_PROPS,...a},displayMode:{...e.STRUCT_DISPLAY_PREP_TREE.displayMode,id:"tree-xen",title:n.get("structureView")},DISPLAY_PROPS:{...e.STRUCT_DISPLAY_PREP_TREE.DISPLAY_PROPS,fixed:[...e.STRUCT_DISPLAY_PREP_TREE.DISPLAY_PROPS.fixed,i.INST_QUANT]}},T={...e.STRUCT_DISPLAY_PREP_LIST_XEN_DEMO,displayMode:{...e.STRUCT_DISPLAY_PREP_LIST.displayMode,id:"list-xen",expandCollapseEnabled:!1}},l={...e.STRUCT_DISPLAY_PREP_LIST_XEN_DEMO,displayMode:{...e.STRUCT_DISPLAY_PREP_LIST_XEN_DEMO.displayMode,id:"tree-list-xen",icon:"tree-view-root",title:n.get("structureReferenceView"),expandCollapseEnabled:!0}};return{STRUCT_COMPARE_TREE_XEN:o,STRUCT_DISPLAY_PREP_TREE_XEN:c,STRUCT_DISPLAY_PREP_LIST_XEN:T,STRUCT_ADD_STATUS_LIST_XEN:{...e.STRUCT_ADD_STATUS_LIST_XEN_DEMO},STRUCT_DISPLAY_PREP_TREE_LIST_XEN:l,STRUCT_ADD_STATUS_TREE_LIST_XEN:{...e.STRUCT_ADD_STATUS_LIST_XEN_DEMO}}}),define("DS/ENOXEngineerCompare/compare/ViewDefs",["UWA/Core","DS/ENOXEngineerCompare/compare/plugins/XENViewDefOptions","DS/CompareWidget2/ViewDefModules/ViewDefOptions","DS/CompareWidget2/ViewDefModules/FlexibleViewDefs","DS/ENOXEngineerCompare/compare/plugins/ConstantsDefs"],(e,t,r,n,s)=>{return class{static getViewDefs(){const{PLUGDEFS:i}=n,a={...i,AttrFetch:{...i.AttrFetch},AttrCompare:{...i.AttrCompare},AttrDisplay:{...i.AttrDisplay},StructFetch:{Path:i.StructFetch.Path,Options:{...i.StructFetch.Options,CV_PROPS:{...i.StructFetch.Options.CV_PROPS,CONT_RAWMAT_QUANTITY_LENGTH_INST:`INST.${s.CONT_RAWMAT_QUANTITY_LENGTH_INST}`,CONT_RAWMAT_QUANTITY_MASS_INST:`INST.${s.CONT_RAWMAT_QUANTITY_MASS_INST}`,CONT_RAWMAT_QUANTITY_AREA_INST:`INST.${s.CONT_RAWMAT_QUANTITY_AREA_INST}`,CONT_RAWMAT_QUANTITY_VOLUME_INST:`INST.${s.CONT_RAWMAT_QUANTITY_VOLUME_INST}`,CONT_RAWMAT_QUANTITY_ASREQ_INST:`INST.${s.CONT_RAWMAT_QUANTITY_ASREQ_INST}`}}},StructFetchRawMaterialInstance:{Path:"DS/ENOXEngineerCompare/compare/plugins/FetchRawMaterialInstanceQuantity"},StructConvertRawMaterialInstance:{Path:"DS/ENOXEngineerCompare/compare/plugins/ConvertRawMaterialInstanceQuantity"},StructFlexDisplay:i.structFlexDisplay,StructAgg_TREE:{...i.structAgg_TREE},StructCompare_TREE:{Path:"DS/CompareWidget2/plugins/STRUCTURE/STRUCT_COMPARE_plugin",Options:t.STRUCT_COMPARE_TREE_XEN},StructAddStatus_TREE:{Path:"DS/CompareWidget2/plugins/STRUCTURE/flexibleView/STRUCT_ADD_STATUS_plugin"},StructDisplayPrep_TREE:{Path:i.structDisplayPrep_TREE.Path,Options:t.STRUCT_DISPLAY_PREP_TREE_XEN},StructAgg_LIST:{Path:"DS/ENOXEngineerCompare/compare/plugins/XENStructAgg_LIST",Options:{...i.structAgg_LIST.Options}},StructCompare_LIST:{...i.StructCompare_LIST},StructAddStatus_LIST:{Path:"DS/CompareWidget2/plugins/STRUCTURE/flexibleView/STRUCT_ADD_STATUS_plugin",Options:t.STRUCT_ADD_STATUS_LIST_XEN},StructDisplayPrep_LIST:{Path:"DS/CompareWidget2/plugins/STRUCTURE/flexibleView/STRUCT_DISPLAY_PREP_plugin",Options:t.STRUCT_DISPLAY_PREP_LIST_XEN},StructAgg_TREE_LIST:{Path:"DS/ENOXEngineerCompare/compare/plugins/XENStructAgg_TREE_LIST"},StructCompare_TREE_LIST:{...i.StructCompare_LIST},StructAddStatus_TREE_LIST:{Path:"DS/CompareWidget2/plugins/STRUCTURE/flexibleView/STRUCT_ADD_STATUS_plugin",Options:t.STRUCT_ADD_STATUS_TREE_LIST_XEN},StructDisplayPrep_TREE_LIST:{Path:"DS/CompareWidget2/plugins/STRUCTURE/flexibleView/STRUCT_DISPLAY_PREP_plugin",Options:t.STRUCT_DISPLAY_PREP_TREE_LIST_XEN},InstAttrFetch:{...i.InstAttrFetch},InstAttrCompare:{...i.InstAttrCompare},InstAttrDisplay:{...i.InstAttrDisplay}},o=e.clone(r);return e.merge({VIEWSETS:{XEN_QUANTITY_VIEW:{ROW:["STRUCT_VIEW_TREE","STRUCT_VIEW_TREE_LIST","STRUCT_VIEW_LIST",{COL:[["PROP_VIEW","INSTANCE_VIEW","EFFECTIVITY_VIEW"]]}]}},VIEWDEFS:{PROP_VIEW:["AttrFetch","AttrCompare","AttrDisplay"],STRUCT_VIEW_TREE:["StructFetch","StructFetchRawMaterialInstance","StructAgg_TREE","StructCompare_TREE","StructAddStatus_TREE","StructDisplayPrep_TREE","StructFlexDisplay","Exporter"],STRUCT_VIEW_LIST:["StructFetch","StructFetchRawMaterialInstance","StructConvertRawMaterialInstance","StructAgg_LIST","StructCompare_LIST","StructAddStatus_LIST","StructDisplayPrep_LIST","StructFlexDisplay","Exporter"],STRUCT_VIEW_TREE_LIST:["StructFetch","StructFetchRawMaterialInstance","StructConvertRawMaterialInstance","StructAgg_TREE_LIST","StructCompare_TREE_LIST","StructAddStatus_TREE_LIST","StructDisplayPrep_TREE_LIST","StructFlexDisplay","Exporter"],INSTANCE_VIEW:["InstAttrFetch","InstAttrCompare","InstAttrDisplay"],EFFECTIVITY_VIEW:["EffectivityFetch","EffectivityCompare","EffectivityDisplay"]},PLUGDEFS:a},o)}}.getViewDefs()});