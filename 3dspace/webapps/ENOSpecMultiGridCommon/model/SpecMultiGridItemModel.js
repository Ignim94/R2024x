define("DS/ENOSpecMultiGridCommon/model/SpecMultiGridItemModel",["DS/TreeModel/TreeNodeModel","UWA/Core"],function(t,e){"use strict";function i(e){this._parentNode={_nodeDepth:1},this.pathElement={externalPath:[]},this.options={filteringContext:{isFilterOutBySearch:!0,isFilterOutByTagger:!0,isFilterOutByNG:!0},grid:{physicalId:void 0,id:void 0,"ds6w:type":void 0,"ds6w:type_value":void 0,"ds6w:policy":void 0,"ds6w:policy_value":void 0,name:void 0,"ds6w:identifier":void 0,"ds6w:label":void 0,"ds6w:description":void 0,"ds6w:globalType":void 0,"ds6w:reserved":void 0,isLastVersion:void 0,"ds6wg:PLMReference.V_isLastVersion":void 0,"ds6w:reservedBy":void 0,owner:void 0,"ds6w:responsible":void 0,"ds6wg:revision":void 0,"ds6w:status":void 0,"ds6w:status_value":void 0,"ds6w:created":void 0,"ds6w:lastModifiedBy":void 0,"ds6w:modified":void 0,typeIcon:[]},icons:[],thumbnail:void 0,thumbnail_2d:void 0,label:void 0,subLabel:void 0,description:void 0},t.call(this,this.options)}return i.prototype=Object.create(t.prototype),i.prototype.shouldBeEditable=function(){return!1},i.prototype.getType=function(){return this.options.grid["ds6w:type"]},i.prototype.getPolicy=function(){return this.options.grid["ds6w:policy"]},i.prototype.getDisplayName=function(){return this.getLabel()+" "+this.getRevision()},i.prototype.getName=i.prototype.getIdentifier=function(){return this.options.grid["ds6w:identifier"]},i.prototype.getDescription=function(){return this.options.grid["ds6w:description"]},i.prototype.setDescription=function(t){this.options.grid["ds6w:description"]=t},i.prototype.getPhysicalId=i.prototype.getID=function(){return this.options.grid.physicalId},i.prototype.getTitle=function(){return this.options.grid["ds6w:label"]},i.prototype.setTitle=function(t){this.options.grid["ds6w:label"]=this.options.grid.tree=t},i.prototype.getLabel=function(){return this.options.grid["ds6w:label"]},i.prototype.getParentId=function(){return this.options.grid.parentId},i.prototype.getTypeActualName=function(){return this.options.grid["ds6w:type_value"]},i.prototype.getPolicyActualName=function(){return this.options.grid["ds6w:policy_value"]},i.prototype.getTypeIcon=function(){return this.options.icons},i.prototype.getGlobalType=function(){return this.options.grid["ds6w:globalType"]},i.prototype.getReserved=function(){return this.options.grid["ds6w:reserved"]},i.prototype.setReserved=function(t){this.options.grid["ds6w:reserved"]=t},i.prototype.getOwner=i.prototype.getResponsible=function(){return this.options.grid["ds6w:responsible"]},i.prototype.setOwner=i.prototype.setResponsible=function(t){this.options.grid["ds6w:responsible"]=t},i.prototype.getRevision=function(){return this.options.grid["ds6wg:revision"]},i.prototype.setTypeIcon=function(t){var e=this,i=function(t){var i,o=(i=t)&&i.startsWith("http")?i:i.indexOf("/")>=0?RequestUtil.get3DSpaceURL().concat(i):i?RequestUtil.get3DSpaceURL().concat("/snresources/images/icons/small/"+i+".png"):void 0;o&&-1===e.options.grid.typeIcon.indexOf(o)&&0===e.options.grid.typeIcon.length&&(e.options.grid.typeIcon.push(o),e.options.icons.push(o))};Array.isArray(t)?i(t[0]):i(t)},i.prototype.getThumbnail=function(){return this.options.thumbnail_2d||this.options.thumbnail},i.prototype.getMaturity=function(){return this.options.grid["ds6w:status"]},i.prototype.setMaturity=function(t){this.options.grid["ds6w:status"]=t},i.prototype.getMaturityActualName=function(){return this.options.grid["ds6w:status_value"]},i.prototype.setMaturityActualName=function(t){this.options.grid["ds6w:status_value"]=t},i.prototype.getModifedDate=function(){return this.options.grid["ds6w:modified"]},i.prototype.setModifedDate=function(t){this.options.grid["ds6w:modified"]=t},i.prototype.getOriginatedDate=function(){return this.options.grid["ds6w:created"]},i.prototype.getCurrentAccess=function(){return this.options.grid.currentAccess},i.prototype.setCurrentAccess=function(t){this.options.grid.currentAccess=t},i.prototype.hasAccess=function(t){var e=this.getCurrentAccess();return!e||function(t,e){if(t.indexOf("all")>=0)return!0;var i=e;if(Array.isArray(i)){for(var o=!0,s=0;s<i.length;s++){var r=i[s];if(-1===t.indexOf(r)){o=!1;break}}return o}return t.indexOf(i)>=0||void 0}(e,t)},i});