define("DS/ENOXCompareRules/plugins/FetchDrivingCriteria",["DS/CompareWidget2/plugins/plugin","DS/CompareWidget2/plugins/STRUCTURE/expansionAdapters/nodeOccRel2RefInstTree","DS/UIKIT/Mask","DS/xPortfolioQueryServices/js/xPortfolioModel","DS/CompareWidget2/plugins/STRUCTURE/refInstTree/refInstTreeAug"],function(e,t,i,n,r){"use strict";return e.extend({init:function(e,t,i,n){this._parent(e,t,i,n)},onLoad:function(){return this._parent()},onDestroy:function(){return this._parent()},execute:async function(e,i){var o,s,u=e.leftRuleId,c=e.rightRuleId,a=e.lMvId,l=e.rMvId,p=e.lRuleDefinition,f=e.rRuleDefinition,g=p.configurationRule.attributes.ExpressionType,_=f.configurationRule.attributes.ExpressionType,I=e.rules;if("Matrix"==g&&"Matrix"==_)if(await n.getCompareRuleCriteria({identifier:u,modelVersion:a,typeCriteria:"drivingCriteria"}).then(function(e){o=e},function(e){console.log("Failed to fetch MV ID for rule")}),await n.getCompareRuleCriteria({identifier:c,modelVersion:l,typeCriteria:"drivingCriteria"}).then(function(e){s=e},function(e){console.log("Failed to fetch MV ID for rule")}),o.hasOwnProperty("nodes")&&s.hasOwnProperty("nodes")){let e=t.convert(I[0],o,this._plugSvcs,i),n=t.convert(I[1],s,this._plugSvcs,i);var R={securityContext:e._objIDSpec._securityContext,tenant:e._objIDSpec._tenant,serviceName:e._objIDSpec._serviceName},S={securityContext:n._objIDSpec._securityContext,tenant:n._objIDSpec._tenant,serviceName:n._objIDSpec._serviceName},d=this._plugSvcs;r.augment(e,R,this._plugSvcs).then(function(e){},function(e){d.errout("FAILURE AUGMENTING TREE")}),r.augment(n,S,this._plugSvcs).then(function(e){},function(e){d.errout("FAILURE AUGMENTING TREE")});let u=[e,n];this.reportOK(u)}else this._plugSvcs.postEvent("DRIVING_STRUCTURE_NOT_AVAILABLE");else this._plugSvcs.postEvent("DRIVING_STRUCTURE_NOT_AVAILABLE")}})});