{
  "openapi": "3.0.0",
  "info": {
    "description": "dseehw: Logical corpus REST Services provided in 3DSpace service for Electrical & Electronic (EE) Hardware objects",
    "version": "1.4.0",
    "title": "EE Hardware Web Services"
  },
  "servers": [
    {
      "url": "{3DSpace}",
      "variables": {
        "3DSpace": {
          "default": "https://3DEXPERIENCE_3DSpace",
          "description": "URL of the 3DSpace service"
        }
      }
    }
  ],
  "paths": {
    "/resources/v1/modeler/dseehw/dseehw:EEHwItem": {
      "post": {
        "summary": "Creates EE Hardware items",
        "description": "Creates EE Hardware Reference objects; can be of several types : EETopology, EEECU, EEActuator, EESensor, EESwitch, EEDevice, EEElectricalDevice, or derived types.",
        "operationId": "dseehw:EEHwItem",
        "tags": [
          "dseehw:EEHwItem"
        ],
        "parameters": [
          {
            "name": "SecurityContext",
            "in": "header",
            "description": "Role.Organization.CollabSpace value Ex:VPLMProjectLeader.MyCompany.Default",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ENO_CSRF_TOKEN",
            "in": "header",
            "description": "csrf token. You can get it from 3DSpace/resources/v1/application/CSRF",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$mva",
            "description": "Multi Valuated Attributes support. Default mva value is : false",
            "required": false,
            "schema": {
              "type": "boolean",
              "enum": [
                "true",
                "false"
              ]
            }
          },
          {
            "in": "query",
            "name": "$mask",
            "description": "Mask defining what will be returned. Default Mask is dskern:mask",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "dsmvlog:LogItem.Mask.Reference.Details",
                "dsmveehw:EEHWItemMask.Reference.Common",
                "dsmveehw:EEHWItemMask.Reference.EEECU (for EEECU only)",
                "dsmveehw:EEHWItemMask.Reference.Rack (for EERack only)"
              ]
            }
          },
          {
            "in": "query",
            "name": "$fields",
            "description": "We can add several fields with comma(,) separator to get in the response.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "dsmveno:SupportedTypes",
                "dsmveno:CustomerAttributes",
                "dsmveehw:attribute.reference.partNumber",
                "dsmveehw:attribute.reference.wkupOverBus(for EEECU only )",
                "dsmveehw:attribute.reference.rack.nbOfColumns (for EERack only)",
                "dsmveehw:attribute.reference.rack.nbOfRows (for EERack only)",
                "dsmveehw:attribute.reference.rack.nbOfSlotsPerUnit (for EERack only)"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createEEHardwareReferences"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request successful.",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/dsmveno_DefaultBusMask.public_WithCEStamp"
                    },
                    {
                      "$ref": "#/components/schemas/dsmveehw_EEHwItem.Mask.Reference.Details_WithCEStamp"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BAD REQUEST. The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED. The request requires user authentication. The response MUST include a WWW-Authenticate header field containing a challenge applicable to the requested resource. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials. If the 401 response contains the same challenge as the prior response, and the user agent has already attempted authentication at least once, then the user SHOULD be presented the entity that was given in the response, since that entity might include relevant diagnostic information. HTTP access authentication is explained in \"HTTP Authentication: Basic and Digest Access Authentication\".",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "FORBIDDEN. The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated. If the request method was not HEAD and the server wishes to make public why the request has not been fulfilled, it SHOULD describe the reason for the refusal in the entity. If the server does not wish to make this information available to the client, the status code 404 (Not Found) can be used instead.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "INTERNAL SERVER ERROR. A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/resources/v1/modeler/dseehw/dseehw:EEHwItem/{ID}": {
      "get": {
        "summary": "Gets an EE Hardware Item",
        "description": "Gets a EE Hardware Item",
        "operationId": "GET_dseehw:EEHwItem_ID",
        "tags": [
          "dseehw:EEHwItem"
        ],
        "parameters": [
          {
            "name": "SecurityContext",
            "in": "header",
            "description": "Role.Organization.CollabSpace value Ex:VPLMProjectLeader.MyCompany.Default",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ID",
            "in": "path",
            "description": "dseehw:EEHwItem object ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$mva",
            "description": "Multi Valuated Attributes support. Default mva value is : false",
            "required": false,
            "schema": {
              "type": "boolean",
              "enum": [
                "true",
                "false"
              ]
            }
          },
          {
            "in": "query",
            "name": "$mask",
            "description": "Mask defining what will be returned. Default Mask is dskern:mask",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "dskern:Mask.Default",
                "dsmvlog:LogItem.Mask.Reference.Details",
                "dsmveehw:EEHWItemMask.Reference.Common",
                "dsmveehw:EEHWItemMask.Reference.EEECU (for EEECU only)",
                "dsmveehw:EEHWItemMask.Reference.Rack (for EERack only)"
              ]
            }
          },
          {
            "in": "query",
            "name": "$fields",
            "description": "We can add several fields with comma(,) separator to get in the response.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "dsmveno:SupportedTypes",
                "dsmveno:CustomerAttributes",
                "dsmveehw:attribute.reference.partNumber",
                "dsmveehw:attribute.reference.wkupOverBus (for EEECU only)",
                "dsmveehw:attribute.reference.rack.nbOfColumns (for EERack only)",
                "dsmveehw:attribute.reference.rack.nbOfRows (for EERack only)",
                "dsmveehw:attribute.reference.rack.nbOfSlotsPerUnit (for EERack only)"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful.",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/dsmveno_DefaultBusMask.public_WithCEStamp"
                    },
                    {
                      "$ref": "#/components/schemas/dsmveehw_EEHwItem.Mask.Reference.Details_WithCEStamp"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BAD REQUEST. The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED. The request requires user authentication. The response MUST include a WWW-Authenticate header field containing a challenge applicable to the requested resource. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials. If the 401 response contains the same challenge as the prior response, and the user agent has already attempted authentication at least once, then the user SHOULD be presented the entity that was given in the response, since that entity might include relevant diagnostic information. HTTP access authentication is explained in \"HTTP Authentication: Basic and Digest Access Authentication\".",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "INTERNAL SERVER ERROR. A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Modifies the EE Hardware Item attributes",
        "description": "Modifies the EE Hardware Item attributes",
        "operationId": "PATCH_dseehw:EEHwItem_ID",
        "tags": [
          "dseehw:EEHwItem"
        ],
        "parameters": [
          {
            "name": "SecurityContext",
            "in": "header",
            "description": "Role.Organization.CollabSpace value Ex:VPLMProjectLeader.MyCompany.Default",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ENO_CSRF_TOKEN",
            "in": "header",
            "description": "csrf token. You can get it from 3DSpace/resources/v1/application/CSRF",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ID",
            "in": "path",
            "description": "dseehw:EEHwItem object ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$mva",
            "description": "Multi Valuated Attributes support. Default mva value is : false",
            "required": false,
            "schema": {
              "type": "boolean",
              "enum": [
                "true",
                "false"
              ]
            }
          },
          {
            "in": "query",
            "name": "$mask",
            "description": "Mask defining what will be returned. Default Mask is dskern:mask",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "dskern:Mask.Default",
                "dsmvlog:LogItem.Mask.Reference.Details",
                "dsmveehw:EEHWItemMask.Reference.Common",
                "dsmveehw:EEHWItemMask.Reference.EEECU (for EEECU only)",
                "dsmveehw:EEHWItemMask.Reference.Rack (for EERack only)"
              ]
            }
          },
          {
            "in": "query",
            "name": "$fields",
            "description": "We can add several fields with comma(,) separator to get in the response.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "dsmveno:SupportedTypes",
                "dsmveno:CustomerAttributes",
                "dsmveehw:attribute.reference.partNumber",
                "dsmveehw:attribute.reference.wkupOverBus(for EEECU only )",
                "dsmveehw:attribute.reference.rack.nbOfColumns (for EERack only)",
                "dsmveehw:attribute.reference.rack.nbOfRows (for EERack only)",
                "dsmveehw:attribute.reference.rack.nbOfSlotsPerUnit (for EERack only)"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dseehw_EEHwItem_PATCH"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request successful.",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/dsmveno_DefaultBusMask.public_WithCEStamp"
                    },
                    {
                      "$ref": "#/components/schemas/dsmveehw_EEHwItem.Mask.Reference.Details_WithCEStamp"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BAD REQUEST. The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED. The request requires user authentication. The response MUST include a WWW-Authenticate header field containing a challenge applicable to the requested resource. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials. If the 401 response contains the same challenge as the prior response, and the user agent has already attempted authentication at least once, then the user SHOULD be presented the entity that was given in the response, since that entity might include relevant diagnostic information. HTTP access authentication is explained in \"HTTP Authentication: Basic and Digest Access Authentication\".",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "FORBIDDEN. The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated. If the request method was not HEAD and the server wishes to make public why the request has not been fulfilled, it SHOULD describe the reason for the refusal in the entity. If the server does not wish to make this information available to the client, the status code 404 (Not Found) can be used instead.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "INTERNAL SERVER ERROR. A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Deletes an EE Hardware Item",
        "description": "Deletes an EE Hardware Item",
        "operationId": "DELETE_dseehw:EEHwItem_ID",
        "tags": [
          "dseehw:EEHwItem"
        ],
        "parameters": [
          {
            "name": "SecurityContext",
            "in": "header",
            "description": "Role.Organization.CollabSpace value Ex:VPLMProjectLeader.MyCompany.Default",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ENO_CSRF_TOKEN",
            "in": "header",
            "description": "csrf token. You can get it from 3DSpace/resources/v1/application/CSRF",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ID",
            "in": "path",
            "description": "dseehw:EEHwItem object ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded. The information returned with the response is dependent on the method used in the request, for example: GET an entity corresponding to the requested resource is sent in the response; HEAD the entity-header fields corresponding to the requested resource are sent in the response without any message-body; POST an entity describing or containing the result of the action; TRACE an entity containing the request message as received by the end server.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "BAD REQUEST. The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED. The request requires user authentication. The response MUST include a WWW-Authenticate header field containing a challenge applicable to the requested resource. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials. If the 401 response contains the same challenge as the prior response, and the user agent has already attempted authentication at least once, then the user SHOULD be presented the entity that was given in the response, since that entity might include relevant diagnostic information. HTTP access authentication is explained in \"HTTP Authentication: Basic and Digest Access Authentication\".",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "FORBIDDEN. The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated. If the request method was not HEAD and the server wishes to make public why the request has not been fulfilled, it SHOULD describe the reason for the refusal in the entity. If the server does not wish to make this information available to the client, the status code 404 (Not Found) can be used instead.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "INTERNAL SERVER ERROR. A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/resources/v1/modeler/dseehw/dseehw:EEHwItem/{PID}/dseehw:EEHwInstance": {
      "post": {
        "summary": "Creates EE Hardware Instances under an EEHwItem",
        "description": "Creates EE Hardware Instances for an Item. Instances can be of several types: EEECUInstance, EESensorInstance, EEActuatorInstance, EESwitchInstance, EEDeviceInstance, EEElectricalDeviceInstance,EERackInstance or EESubSystem",
        "operationId": "dseehw:EEHwItem_ID_dseehw:EEHwInstance",
        "tags": [
          "dseehw:EEHwInstance"
        ],
        "parameters": [
          {
            "name": "SecurityContext",
            "in": "header",
            "description": "Role.Organization.CollabSpace value Ex:VPLMProjectLeader.MyCompany.Default",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ENO_CSRF_TOKEN",
            "in": "header",
            "description": "csrf token. You can get it from 3DSpace/resources/v1/application/CSRF",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PID",
            "in": "path",
            "description": "dseehw:EEHwItem object ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$mva",
            "description": "Multi Valuated Attributes support. Default mva value is : false",
            "required": false,
            "schema": {
              "type": "boolean",
              "enum": [
                "true",
                "false"
              ]
            }
          },
          {
            "in": "query",
            "name": "$mask",
            "description": "Mask defining what will be returned. Default Mask is dskern:mask",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "dskern:Mask.Default",
                "dsmvlog:LogInstance.Mask.Instance.Details",
                "dsmveehw:EEHWInstanceMask.Instance.EEInstanceCommon"
              ]
            }
          },
          {
            "in": "query",
            "name": "$fields",
            "description": "We can add several fields with comma(,) separator to get in the response.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "dsmveno:SupportedTypes",
                "dsmveno:CustomerAttributes",
                "dsmveehw:attribute.instance.eeecus.comConfigurationGwTimeBase",
                "dsmveehw:attribute.instance.eeecus.comConfigurationRxTimeBase",
                "dsmveehw:attribute.instance.eeecus.comConfigurationTxTimeBase"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createEEHardwareInstances"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request successful.",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/dsmveno_DefaultRelMask.public_WithCEStamp"
                    },
                    {
                      "$ref": "#/components/schemas/dsmveehw_EEHwInstance.Mask.Instance.Details_WithCEStamp"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BAD REQUEST. The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED. The request requires user authentication. The response MUST include a WWW-Authenticate header field containing a challenge applicable to the requested resource. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials. If the 401 response contains the same challenge as the prior response, and the user agent has already attempted authentication at least once, then the user SHOULD be presented the entity that was given in the response, since that entity might include relevant diagnostic information. HTTP access authentication is explained in \"HTTP Authentication: Basic and Digest Access Authentication\".",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "FORBIDDEN. The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated. If the request method was not HEAD and the server wishes to make public why the request has not been fulfilled, it SHOULD describe the reason for the refusal in the entity. If the server does not wish to make this information available to the client, the status code 404 (Not Found) can be used instead.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "INTERNAL SERVER ERROR. A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/resources/v1/modeler/dseehw/dseehw:EEHwItem/{PID}/dseehw:EEHwInstance/{ID}": {
      "get": {
        "summary": "Gets an EE Hardware Item Instance",
        "description": "Gets an EE Hardware Item Instance",
        "operationId": "GET_dseehw:EEHwItem_ID_dseehw:EEHwInstance_ID",
        "tags": [
          "dseehw:EEHwInstance"
        ],
        "parameters": [
          {
            "name": "SecurityContext",
            "in": "header",
            "description": "Role.Organization.CollabSpace value Ex:VPLMProjectLeader.MyCompany.Default",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PID",
            "in": "path",
            "description": "dseehw:EEHwItem object ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ID",
            "in": "path",
            "description": "dseehw:EEHwInstance object ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$mva",
            "description": "Multi Valuated Attributes support. Default mva value is : false",
            "required": false,
            "schema": {
              "type": "boolean",
              "enum": [
                "true",
                "false"
              ]
            }
          },
          {
            "in": "query",
            "name": "$mask",
            "description": "Mask defining what will be returned. Default Mask is dskern:mask",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "dskern:Mask.Default",
                "dsmvlog:LogInstance.Mask.Instance.Details",
                "dsmveehw:EEHWInstanceMask.Instance.EEInstanceCommon"
              ]
            }
          },
          {
            "in": "query",
            "name": "$fields",
            "description": "We can add several fields with comma(,) separator to get in the response.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "dsmveno:SupportedTypes",
                "dsmveno:CustomerAttributes",
                "dsmveehw:attribute.instance.eeecus.comConfigurationGwTimeBase",
                "dsmveehw:attribute.instance.eeecus.comConfigurationRxTimeBase",
                "dsmveehw:attribute.instance.eeecus.comConfigurationTxTimeBase"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful.",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/dsmveno_DefaultRelMask.public_WithCEStamp"
                    },
                    {
                      "$ref": "#/components/schemas/dsmveehw_EEHwInstance.Mask.Instance.Details_WithCEStamp"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BAD REQUEST. The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED. The request requires user authentication. The response MUST include a WWW-Authenticate header field containing a challenge applicable to the requested resource. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials. If the 401 response contains the same challenge as the prior response, and the user agent has already attempted authentication at least once, then the user SHOULD be presented the entity that was given in the response, since that entity might include relevant diagnostic information. HTTP access authentication is explained in \"HTTP Authentication: Basic and Digest Access Authentication\".",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "INTERNAL SERVER ERROR. A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Modifies the EE Hardware Item Instance attributes ",
        "description": "Modifies the EE Hardware Item Instance attributes ",
        "operationId": "PATCH_PATCH_dseehw:EEHwItem_ID_dseehw:EEHwInstance_ID",
        "tags": [
          "dseehw:EEHwInstance"
        ],
        "parameters": [
          {
            "name": "SecurityContext",
            "in": "header",
            "description": "Role.Organization.CollabSpace value Ex:VPLMProjectLeader.MyCompany.Default",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ENO_CSRF_TOKEN",
            "in": "header",
            "description": "csrf token. You can get it from 3DSpace/resources/v1/application/CSRF",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PID",
            "in": "path",
            "description": "dseehw:EEHwItem object ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ID",
            "in": "path",
            "description": "dseehw:EEHwInstance object ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$mva",
            "description": "Multi Valuated Attributes support. Default mva value is : false",
            "required": false,
            "schema": {
              "type": "boolean",
              "enum": [
                "true",
                "false"
              ]
            }
          },
          {
            "in": "query",
            "name": "$mask",
            "description": "Mask defining what will be returned. Default Mask is dskern:mask",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "dskern:Mask.Default",
                "dsmvlog:LogInstance.Mask.Instance.Details",
                "dsmveehw:EEHWInstanceMask.Instance.EEInstanceCommon"
              ]
            }
          },
          {
            "in": "query",
            "name": "$fields",
            "description": "We can add several fields with comma(,) separator to get in the response.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "dsmveno:SupportedTypes",
                "dsmveno:CustomerAttributes",
                "dsmveehw:attribute.instance.eeecus.comConfigurationGwTimeBase",
                "dsmveehw:attribute.instance.eeecus.comConfigurationRxTimeBase",
                "dsmveehw:attribute.instance.eeecus.comConfigurationTxTimeBase"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dseehw_EEHwInstance_PATCH"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request successful.",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/dsmveno_DefaultRelMask.public_WithCEStamp"
                    },
                    {
                      "$ref": "#/components/schemas/dsmveehw_EEHwInstance.Mask.Instance.Details_WithCEStamp"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BAD REQUEST. The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED. The request requires user authentication. The response MUST include a WWW-Authenticate header field containing a challenge applicable to the requested resource. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials. If the 401 response contains the same challenge as the prior response, and the user agent has already attempted authentication at least once, then the user SHOULD be presented the entity that was given in the response, since that entity might include relevant diagnostic information. HTTP access authentication is explained in \"HTTP Authentication: Basic and Digest Access Authentication\".",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "FORBIDDEN. The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated. If the request method was not HEAD and the server wishes to make public why the request has not been fulfilled, it SHOULD describe the reason for the refusal in the entity. If the server does not wish to make this information available to the client, the status code 404 (Not Found) can be used instead.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "INTERNAL SERVER ERROR. A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Deletes an EE Hardware Item Instance",
        "description": "Deletes an EE Hardware Item Instance",
        "operationId": "DELETE_dseehw:EEHwItem_ID_dseehw:EEHwInstance_ID",
        "tags": [
          "dseehw:EEHwInstance"
        ],
        "parameters": [
          {
            "name": "SecurityContext",
            "in": "header",
            "description": "Role.Organization.CollabSpace value Ex:VPLMProjectLeader.MyCompany.Default",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ENO_CSRF_TOKEN",
            "in": "header",
            "description": "csrf token. You can get it from 3DSpace/resources/v1/application/CSRF",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PID",
            "in": "path",
            "description": "dseehw:EEHwItem object ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ID",
            "in": "path",
            "description": "dseehw:EEHwInstance object ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded. The information returned with the response is dependent on the method used in the request, for example: GET an entity corresponding to the requested resource is sent in the response; HEAD the entity-header fields corresponding to the requested resource are sent in the response without any message-body; POST an entity describing or containing the result of the action; TRACE an entity containing the request message as received by the end server.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "BAD REQUEST. The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED. The request requires user authentication. The response MUST include a WWW-Authenticate header field containing a challenge applicable to the requested resource. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials. If the 401 response contains the same challenge as the prior response, and the user agent has already attempted authentication at least once, then the user SHOULD be presented the entity that was given in the response, since that entity might include relevant diagnostic information. HTTP access authentication is explained in \"HTTP Authentication: Basic and Digest Access Authentication\".",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "FORBIDDEN. The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated. If the request method was not HEAD and the server wishes to make public why the request has not been fulfilled, it SHOULD describe the reason for the refusal in the entity. If the server does not wish to make this information available to the client, the status code 404 (Not Found) can be used instead.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "INTERNAL SERVER ERROR. A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/resources/v1/modeler/dseehw/dseehw:EEHwConnectorType": {
      "post": {
        "summary": "Creates new EE Hardware Types of Connector ( Interfaces)",
        "description": "Creates EE Hardware ConnectorTypes. <ul><li>The type can be <b>EEConnectorType</b> or <b>EEGenericConnectorType</b>.</li><li>The <b>technology</b> property is mandatory for <b>EEConnectorType</b> (not available for <b>EEGenericConnectorType</b>), with possible values : <i><b>\"WiredLink\"</b>, <b>\"Wireless\"</b>, <b>\"CAN\"</b>, <b>\"CAN FD\"</b>, <b>\"CAN Extended\"</b>, <b>\"CAN J1939\"</b>, <b>\"CAN TP\"</b>, <b>\"MilCAN\"</b>, <b>\"LIN\"</b>, <b>\"FlexRay\"</b>, <b>\"Ethernet\"</b>, <b>\"AFDX/ARINC664\"</b>, <b>\"MOST\"</b>, <b>\"K-BUS\"</b>, <b>\"Other\"</b>, <b>\"ARINC429\"</b>, <b>\"MIL-STD-1553\"</b></i><li>The <b>subTechnology</b> property is available for both types</li></ul>",
        "operationId": "dseehw:EEHwConnectorType",
        "tags": [
          "dseehw:EEHwConnectorType"
        ],
        "parameters": [
          {
            "name": "SecurityContext",
            "in": "header",
            "description": "Role.Organization.CollabSpace value Ex:VPLMProjectLeader.MyCompany.Default",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ENO_CSRF_TOKEN",
            "in": "header",
            "description": "csrf token. You can get it from 3DSpace/resources/v1/application/CSRF",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$mva",
            "description": "Multi Valuated Attributes support. Default mva value is : false",
            "required": false,
            "schema": {
              "type": "boolean",
              "enum": [
                "true",
                "false"
              ]
            }
          },
          {
            "in": "query",
            "name": "$mask",
            "description": "Mask defining what will be returned. Default Mask is: dskern:Mask.Default",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "dskern:Mask.Default",
                "dsmveehw:EEHwConnectorType.Mask (for EEHwConnectorType only)",
                "dsmveehw:EEHwConnectorType.Mask.Details (for EEHwConnectorType only)",
                "dsmveehw:EEHwGenericConnectorType.Mask (for EEHwGenericConnectorType only)"
              ]
            }
          },
          {
            "in": "query",
            "name": "$fields",
            "description": "We can add several fields with comma(,) separator to get in the response.See documentation for",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "dsmveno:SupportedTypes",
                "dsmveno:CustomerAttributes",
                "dsmveehw:attribute.itf.subTechnology",
                "dsmveehw:attribute.itf.technology (for EEHwConnectorType only)"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createEEHardwareConnectorTypes"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request successful.",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/dsmveno_DefaultBusMask.public_WithCEStamp"
                    },
                    {
                      "$ref": "#/components/schemas/dsmveehw_EEHwConnectorType.Mask.Details_WithCEStamp"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BAD REQUEST. The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED. The request requires user authentication. The response MUST include a WWW-Authenticate header field containing a challenge applicable to the requested resource. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials. If the 401 response contains the same challenge as the prior response, and the user agent has already attempted authentication at least once, then the user SHOULD be presented the entity that was given in the response, since that entity might include relevant diagnostic information. HTTP access authentication is explained in \"HTTP Authentication: Basic and Digest Access Authentication\".",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "FORBIDDEN. The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated. If the request method was not HEAD and the server wishes to make public why the request has not been fulfilled, it SHOULD describe the reason for the refusal in the entity. If the server does not wish to make this information available to the client, the status code 404 (Not Found) can be used instead.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "INTERNAL SERVER ERROR. A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/resources/v1/modeler/dseehw/dseehw:EEHwConnectorType/{ID}": {
      "get": {
        "summary": "Gets an EE Hardware ConnectorType ",
        "description": "Gets a EE Hardware ConnectorType ",
        "operationId": "GET_dseehw:EEHwConnectorType_ID",
        "tags": [
          "dseehw:EEHwConnectorType"
        ],
        "parameters": [
          {
            "name": "SecurityContext",
            "in": "header",
            "description": "Role.Organization.CollabSpace value Ex:VPLMProjectLeader.MyCompany.Default",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ID",
            "in": "path",
            "description": "dseehw:EEHwConnectorType object ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$mva",
            "description": "Multi Valuated Attributes support. Default mva value is : false",
            "required": false,
            "schema": {
              "type": "boolean",
              "enum": [
                "true",
                "false"
              ]
            }
          },
          {
            "in": "query",
            "name": "$mask",
            "description": "Mask defining what will be returned. Default Mask is:dskern:Mask.Default.Mask",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "dskern:Mask.Default",
                "dsmvlog:LogItem.Mask.Reference.Details",
                "dsmveehw:EEHwConnectorType.Mask (EEConnectorType only)",
                "dsmveehw:EEHwConnectorType.MaskDetails (EEConnectorType only)",
                "dsmveehw:EEHwGenericConnectorType.Mask (EEGenericConnectorType only)"
              ]
            }
          },
          {
            "in": "query",
            "name": "$fields",
            "description": "We can add several fields with comma(,) separator to get in the response.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "dsmveno:SupportedTypes",
                "dsmveno:CustomerAttributes",
                "dsmveehw:attribute.itf.subTechnology",
                "dsmveehw:attribute.itf.technology(EEConnectorType only)"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful.",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/dsmveno_DefaultBusMask.public_WithCEStamp"
                    },
                    {
                      "$ref": "#/components/schemas/dsmveehw_EEHwConnectorType.Mask.Details_WithCEStamp"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BAD REQUEST. The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED. The request requires user authentication. The response MUST include a WWW-Authenticate header field containing a challenge applicable to the requested resource. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials. If the 401 response contains the same challenge as the prior response, and the user agent has already attempted authentication at least once, then the user SHOULD be presented the entity that was given in the response, since that entity might include relevant diagnostic information. HTTP access authentication is explained in \"HTTP Authentication: Basic and Digest Access Authentication\".",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "INTERNAL SERVER ERROR. A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Modifies the EE Hardware ConnectorType  attributes",
        "description": "Modifies the EE Hardware ConnectorType  attributes",
        "operationId": "PATCH_dseehw:EEHwConnectorType_ID",
        "tags": [
          "dseehw:EEHwConnectorType"
        ],
        "parameters": [
          {
            "name": "SecurityContext",
            "in": "header",
            "description": "Role.Organization.CollabSpace value Ex:VPLMProjectLeader.MyCompany.Default",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ENO_CSRF_TOKEN",
            "in": "header",
            "description": "csrf token. You can get it from 3DSpace/resources/v1/application/CSRF",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ID",
            "in": "path",
            "description": "dseehw:EEHwConnectorType object ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$mva",
            "description": "Multi Valuated Attributes support. Default mva value is : false",
            "required": false,
            "schema": {
              "type": "boolean",
              "enum": [
                "true",
                "false"
              ]
            }
          },
          {
            "in": "query",
            "name": "$mask",
            "description": "Mask defining what will be returned. Default Mask is:dskern:Mask.Default",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "dskern:Mask.Default",
                "dsmvlog:LogItem.Mask.Reference.Details",
                "dsmveehw:EEHwConnectorType.Mask (EEConnectorType only)",
                "dsmveehw:EEHwConnectorType.MaskDetails (EEConnectorType only)",
                "dsmveehw:EEHwGenericConnectorType.Mask (EEGenericConnectorType only)"
              ]
            }
          },
          {
            "in": "query",
            "name": "$fields",
            "description": "We can add several fields with comma(,) separator to get in the response.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "dsmveno:CustomerAttributes",
                "dsmveehw:attribute.itf.subTechnology",
                "dsmveehw:attribute.itf.technology(EEConnectorType only)"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dseehw_EEHwConnectorType_PATCH"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request successful.",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/dsmveno_DefaultBusMask.public_WithCEStamp"
                    },
                    {
                      "$ref": "#/components/schemas/dsmveehw_EEHwItem.Mask.Reference.Details_WithCEStamp"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BAD REQUEST. The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED. The request requires user authentication. The response MUST include a WWW-Authenticate header field containing a challenge applicable to the requested resource. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials. If the 401 response contains the same challenge as the prior response, and the user agent has already attempted authentication at least once, then the user SHOULD be presented the entity that was given in the response, since that entity might include relevant diagnostic information. HTTP access authentication is explained in \"HTTP Authentication: Basic and Digest Access Authentication\".",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "FORBIDDEN. The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated. If the request method was not HEAD and the server wishes to make public why the request has not been fulfilled, it SHOULD describe the reason for the refusal in the entity. If the server does not wish to make this information available to the client, the status code 404 (Not Found) can be used instead.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "INTERNAL SERVER ERROR. A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Deletes an EE Hardware ConnectorType ",
        "description": "Deletes an EE Hardware ConnectorType ",
        "operationId": "DELETE_dseehw:EEHwConnectorType_ID",
        "tags": [
          "dseehw:EEHwConnectorType"
        ],
        "parameters": [
          {
            "name": "SecurityContext",
            "in": "header",
            "description": "Role.Organization.CollabSpace value Ex:VPLMProjectLeader.MyCompany.Default",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ENO_CSRF_TOKEN",
            "in": "header",
            "description": "csrf token. You can get it from 3DSpace/resources/v1/application/CSRF",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ID",
            "in": "path",
            "description": "dseehw:EEHwConnectorType object ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded. The information returned with the response is dependent on the method used in the request, for example: GET an entity corresponding to the requested resource is sent in the response; HEAD the entity-header fields corresponding to the requested resource are sent in the response without any message-body; POST an entity describing or containing the result of the action; TRACE an entity containing the request message as received by the end server.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "BAD REQUEST. The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED. The request requires user authentication. The response MUST include a WWW-Authenticate header field containing a challenge applicable to the requested resource. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials. If the 401 response contains the same challenge as the prior response, and the user agent has already attempted authentication at least once, then the user SHOULD be presented the entity that was given in the response, since that entity might include relevant diagnostic information. HTTP access authentication is explained in \"HTTP Authentication: Basic and Digest Access Authentication\".",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "FORBIDDEN. The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated. If the request method was not HEAD and the server wishes to make public why the request has not been fulfilled, it SHOULD describe the reason for the refusal in the entity. If the server does not wish to make this information available to the client, the status code 404 (Not Found) can be used instead.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "INTERNAL SERVER ERROR. A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/resources/v1/modeler/dseehw/dseehw:EEHwItem/{ITEMID}/dseehw:EEHwCommunicationConnector": {
      "post": {
        "summary": "Creates EE Hardware CommunicationConnectors ( i.e. Ports ) to be attached to an EE Hardware Item",
        "description": "Creates EE Hardware CommunicationConnector ( Ports ) to be attached to an EE Hardware Item. <br>One available type: <b>EECommunicationConnector</b> (and derived types).<br>EECommunicationConnectors refer to <b>dseehw:EEHwConnectorType</b> items.<br> Specific EE properties are available for CommunicationConnectors which reference to ConnectorTypes based on: <ul><li>LIN technology : <b>isLinMaster</b>, <b>linProtocolVersion</b>, <b>timeBase</b></li><li>FlexRay technology : <b>flexRayLatestFx</b></li><br>WARNING : <b>direction</b> property is mandatory for each item in the payload.Available values : 1(IN), 2(OUT), 3(INOUT), 4(NONE)",
        "operationId": "dseehw:EEHwItem_ITEMID_dseehw:EEHwCommunicationConnector",
        "tags": [
          "dseehw:EEHwCommunicationConnector"
        ],
        "parameters": [
          {
            "name": "SecurityContext",
            "in": "header",
            "description": "Role.Organization.CollabSpace value Ex:VPLMProjectLeader.MyCompany.Default",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ENO_CSRF_TOKEN",
            "in": "header",
            "description": "csrf token. You can get it from 3DSpace/resources/v1/application/CSRF",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ITEMID",
            "in": "path",
            "description": "dseehw:EEHwItem object ID under which the Communication Connector will be created",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$mva",
            "description": "Multi Valuated Attributes support. Default mva value is : false",
            "required": false,
            "schema": {
              "type": "boolean",
              "enum": [
                "true",
                "false"
              ]
            }
          },
          {
            "in": "query",
            "name": "$mask",
            "description": "Mask defining what will be returned. Default Mask is:dskern:Mask.Default",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "dskern:Mask.Default",
                "dsmveehw:EEHwCommunicationConnector.LINMask (for Connectors based on LIN only)",
                "dsmveehw:EEHwCommunicationConnector.FlexRayMask (for Connectors based on FlexRay only)"
              ]
            }
          },
          {
            "in": "query",
            "name": "$fields",
            "description": "We can add several fields with comma(,) separator to get in the response.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "dsmveno:SupportedTypes",
                "dsmveno:CustomerAttributes",
                "dsmvlog:attribute.interface.direction",
                "dseehw:attribute.port.flexRayLatestTx (for FlexRay connectors only) ",
                "dseehw:attribute.port.isLinMasterController ( for LIN connectors only )",
                "dseehw:attribute.port.linProtocolVersion ( for LIN connectors only )",
                "dseehw:attribute.port.timeBase ( for LIN connectors only )"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createEEHardwareCommunicationConnectors"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request successful.",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/dsmveno_DefaultRelMask.public_WithCEStamp"
                    },
                    {
                      "$ref": "#/components/schemas/dsmveehw_EEHwCommunicationConnector.Mask.Details_WithCEStamp"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BAD REQUEST. The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED. The request requires user authentication. The response MUST include a WWW-Authenticate header field containing a challenge applicable to the requested resource. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials. If the 401 response contains the same challenge as the prior response, and the user agent has already attempted authentication at least once, then the user SHOULD be presented the entity that was given in the response, since that entity might include relevant diagnostic information. HTTP access authentication is explained in \"HTTP Authentication: Basic and Digest Access Authentication\".",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "FORBIDDEN. The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated. If the request method was not HEAD and the server wishes to make public why the request has not been fulfilled, it SHOULD describe the reason for the refusal in the entity. If the server does not wish to make this information available to the client, the status code 404 (Not Found) can be used instead.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "INTERNAL SERVER ERROR. A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/resources/v1/modeler/dseehw/dseehw:EEHwItem/{ITEMID}/dseehw:EEHwCommunicationConnector/{ID}": {
      "get": {
        "summary": "Gets an EE Hardware Communication Connector",
        "description": "Gets an EE Hardware  Communication Connector",
        "operationId": "GET_dseehw:EEHwItem_ITEMID_dseehw:EEHwCommunicationConnector_ID",
        "tags": [
          "dseehw:EEHwCommunicationConnector"
        ],
        "parameters": [
          {
            "name": "SecurityContext",
            "in": "header",
            "description": "Role.Organization.CollabSpace value Ex:VPLMProjectLeader.MyCompany.Default",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ITEMID",
            "in": "path",
            "description": "dseehw:EEHwItem object ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ID",
            "in": "path",
            "description": "dseehw:EEHwCommunicationConnector object ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$mva",
            "description": "Multi Valuated Attributes support. Default mva value is : false",
            "required": false,
            "schema": {
              "type": "boolean",
              "enum": [
                "true",
                "false"
              ]
            }
          },
          {
            "in": "query",
            "name": "$mask",
            "description": "Mask defining what will be returned. Default Mask is:dskern:Mask.Default",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "dskern:Mask.Default",
                "dsmvlog:LogInstance.Mask.Instance.Details",
                "dsmveehw:EEHwCommunicationConnector.LINMask (for Connectors based on LIN only)",
                "dsmveehw:EEHwCommunicationConnector.FlexRayMask (for Connectors based on FlexRay only)"
              ]
            }
          },
          {
            "in": "query",
            "name": "$fields",
            "description": "We can add several fields with comma(,) separator to get in the response.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "dsmveno:SupportedTypes",
                "dsmveno:CustomerAttributes",
                "dseehw:attribute.port.flexRayLatestTx ( for FlexRay ports only )",
                "dseehw:attribute.port.isLinMasterController ( for LIN ports only )",
                "dseehw:attribute.port.linProtocolVersion ( for LIN ports only )",
                "dseehw:attribute.port.timeBase ( for LIN ports only )"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful.",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/dsmveno_DefaultRelMask.public_WithCEStamp"
                    },
                    {
                      "$ref": "#/components/schemas/dsmveehw_EEHwCommunicationConnector.Mask.Details_WithCEStamp"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BAD REQUEST. The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED. The request requires user authentication. The response MUST include a WWW-Authenticate header field containing a challenge applicable to the requested resource. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials. If the 401 response contains the same challenge as the prior response, and the user agent has already attempted authentication at least once, then the user SHOULD be presented the entity that was given in the response, since that entity might include relevant diagnostic information. HTTP access authentication is explained in \"HTTP Authentication: Basic and Digest Access Authentication\".",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "INTERNAL SERVER ERROR. A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Modifies the EE Hardware Communication Connector attributes ",
        "description": "Modifies the EE Hardware Communication Connector attributes ",
        "operationId": "PATCH_PATCH_dseehw:EEHwItem_ITEMID_dseehw:EEHwCommunicationConnector_ID",
        "tags": [
          "dseehw:EEHwCommunicationConnector"
        ],
        "parameters": [
          {
            "name": "SecurityContext",
            "in": "header",
            "description": "Role.Organization.CollabSpace value Ex:VPLMProjectLeader.MyCompany.Default",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ENO_CSRF_TOKEN",
            "in": "header",
            "description": "csrf token. You can get it from 3DSpace/resources/v1/application/CSRF",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ITEMID",
            "in": "path",
            "description": "dseehw:EEHwItem object ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ID",
            "in": "path",
            "description": "dseehw:EEHwCommunicationConnector object ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$mva",
            "description": "Multi Valuated Attributes support. Default mva value is : false",
            "required": false,
            "schema": {
              "type": "boolean",
              "enum": [
                "true",
                "false"
              ]
            }
          },
          {
            "in": "query",
            "name": "$mask",
            "description": "Mask defining what will be returned. Default Mask is:dskern:Mask.Default",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "dskern:Mask.Default",
                "dsmvlog:LogInstance.Mask.Instance.Details",
                "dsmveehw:EEHwCommunicationConnector.LINMask (for Connectors based on LIN only)",
                "dsmveehw:EEHwCommunicationConnector.FlexRayMask (for Connectors based on FlexRay only)"
              ]
            }
          },
          {
            "in": "query",
            "name": "$fields",
            "description": "We can add several fields with comma(,) separator to get in the response.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "dsmveno:SupportedTypes",
                "dsmveno:CustomerAttributes",
                "dseehw:attribute.port.flexRayLatestTx ( for FlexRay Ports only )",
                "dseehw:attribute.port.isLinMasterController ( for LIN Ports only )",
                "dseehw:attribute.port.linProtocolVersion ( for LIN Ports only )",
                "dseehw:attribute.port.timeBase ( for LIN Ports only )"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dseehw_EEHwCommunicationConnector_PATCH"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request successful.",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/dsmveno_DefaultRelMask.public_WithCEStamp"
                    },
                    {
                      "$ref": "#/components/schemas/dsmveehw_EEHwCommunicationConnector.Mask.Details_WithCEStamp"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "BAD REQUEST. The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED. The request requires user authentication. The response MUST include a WWW-Authenticate header field containing a challenge applicable to the requested resource. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials. If the 401 response contains the same challenge as the prior response, and the user agent has already attempted authentication at least once, then the user SHOULD be presented the entity that was given in the response, since that entity might include relevant diagnostic information. HTTP access authentication is explained in \"HTTP Authentication: Basic and Digest Access Authentication\".",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "FORBIDDEN. The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated. If the request method was not HEAD and the server wishes to make public why the request has not been fulfilled, it SHOULD describe the reason for the refusal in the entity. If the server does not wish to make this information available to the client, the status code 404 (Not Found) can be used instead.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "INTERNAL SERVER ERROR. A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Deletes an EE Hardware Communication Connector",
        "description": "Deletes an EE Hardware Communication Connector",
        "operationId": "DELETE_dseehw:EEHwItem_ITEMID_dseehw:EEHwCommunicationConnector_ID",
        "tags": [
          "dseehw:EEHwCommunicationConnector"
        ],
        "parameters": [
          {
            "name": "SecurityContext",
            "in": "header",
            "description": "Role.Organization.CollabSpace value Ex:VPLMProjectLeader.MyCompany.Default",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ENO_CSRF_TOKEN",
            "in": "header",
            "description": "csrf token. You can get it from 3DSpace/resources/v1/application/CSRF",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ITEMID",
            "in": "path",
            "description": "dseehw:EEHwItem object ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ID",
            "in": "path",
            "description": "dseehw:EEHwCommunicationConnector object ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded. The information returned with the response is dependent on the method used in the request, for example: GET an entity corresponding to the requested resource is sent in the response; HEAD the entity-header fields corresponding to the requested resource are sent in the response without any message-body; POST an entity describing or containing the result of the action; TRACE an entity containing the request message as received by the end server.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "BAD REQUEST. The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED. The request requires user authentication. The response MUST include a WWW-Authenticate header field containing a challenge applicable to the requested resource. The client MAY repeat the request with a suitable Authorization header field. If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials. If the 401 response contains the same challenge as the prior response, and the user agent has already attempted authentication at least once, then the user SHOULD be presented the entity that was given in the response, since that entity might include relevant diagnostic information. HTTP access authentication is explained in \"HTTP Authentication: Basic and Digest Access Authentication\".",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "FORBIDDEN. The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated. If the request method was not HEAD and the server wishes to make public why the request has not been fulfilled, it SHOULD describe the reason for the refusal in the entity. If the server does not wish to make this information available to the client, the status code 404 (Not Found) can be used instead.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "INTERNAL SERVER ERROR. A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "My message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "dseehw_EEHwItem": {
        "required": [
          "title"
        ],
        "properties": {
          "title": {
            "type": "string",
            "example": "My title"
          },
          "description": {
            "type": "string",
            "example": "My description"
          },
          "partNumber": {
            "type": "string",
            "example": "1234"
          },
          "customerAttributes": {
            "type": "object",
            "properties": {
              "DBCustomType.MyDBAttr1": {
                "description": "Attribute DB Value",
                "type": "string",
                "example": "Attribute DB Value"
              },
              "DBCustomType.MyMVA_string_DBAttr": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Multi Valuated Attribute string with $mva parameter set to true",
                "example": [
                  "Paris",
                  "London",
                  "Berlin"
                ]
              },
              "DBCustomType.MyMVA_integer_DBAttr": {
                "type": "array",
                "items": {
                  "type": "integer"
                },
                "description": "Multi Valuated Attribute integer with $mva parameter set to true",
                "example": [
                  5,
                  12,
                  24
                ]
              },
              "DBcustomExtension": {
                "properties": {
                  "DBcustomExtension.MyDBAttr2": {
                    "description": "Attribute DB Value",
                    "type": "string",
                    "example": "Attribute DB Value"
                  }
                }
              },
              "DBcustomAttributesGroup": {
                "properties": {
                  "DBcustomAttributesGroup.MyDBAttr3": {
                    "description": "Attribute DB Value",
                    "type": "string",
                    "example": "Attribute DB Value"
                  }
                }
              }
            }
          },
          "dslog:LogItemEnterpriseAttributes": {
            "$ref": "#/components/schemas/dslog_LogItemEnterpriseAttributes"
          }
        }
      },
      "dseehw_EEHwItem_PATCH": {
        "required": [
          "cestamp"
        ],
        "properties": {
          "title": {
            "type": "string",
            "example": "My title"
          },
          "description": {
            "type": "string",
            "example": "My description"
          },
          "partNumber": {
            "type": "string",
            "example": "1234"
          },
          "cestamp": {
            "type": "string",
            "example": "Timestamp id"
          },
          "customerAttributes": {
            "type": "object",
            "properties": {
              "DBCustomType.MyDBAttr1": {
                "description": "Attribute DB Value",
                "type": "string",
                "example": "Attribute DB Value"
              },
              "DBCustomType.MyMVA_string_DBAttr": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Multi Valuated Attribute string with $mva parameter set to true",
                "example": [
                  "Paris",
                  "London",
                  "Berlin"
                ]
              },
              "DBCustomType.MyMVA_integer_DBAttr": {
                "type": "array",
                "items": {
                  "type": "integer"
                },
                "description": "Multi Valuated Attribute integer with $mva parameter set to true",
                "example": [
                  5,
                  12,
                  24
                ]
              },
              "DBcustomExtension": {
                "properties": {
                  "DBcustomExtension.MyDBAttr2": {
                    "description": "Attribute DB Value",
                    "type": "string",
                    "example": "Attribute DB Value"
                  }
                }
              },
              "DBcustomAttributesGroup": {
                "properties": {
                  "DBcustomAttributesGroup.MyDBAttr3": {
                    "description": "Attribute DB Value",
                    "type": "string",
                    "example": "Attribute DB Value"
                  }
                }
              }
            }
          },
          "dseehw:EEHwItemEnterpriseAttributes": {
            "$ref": "#/components/schemas/dslog_LogItemEnterpriseAttributes"
          }
        }
      },
      "dseehw_EEHwInstance": {
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "My name"
          },
          "description": {
            "type": "string",
            "example": "My description"
          },
          "comConfigurationGwTimeBase": {
            "type": "number",
            "example": 0.005
          },
          "comConfigurationRxTimeBase": {
            "type": "number",
            "example": 0.005
          },
          "comConfigurationTxTimeBase": {
            "type": "number",
            "example": 0.005
          },
          "customerAttributes": {
            "type": "object",
            "properties": {
              "DBCustomType.MyDBAttr1": {
                "description": "Attribute DB Value",
                "type": "string",
                "example": "Attribute DB Value"
              },
              "DBCustomType.MyMVA_string_DBAttr": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Multi Valuated Attribute string with $mva parameter set to true",
                "example": [
                  "Paris",
                  "London",
                  "Berlin"
                ]
              },
              "DBCustomType.MyMVA_integer_DBAttr": {
                "type": "array",
                "items": {
                  "type": "integer"
                },
                "description": "Multi Valuated Attribute integer with $mva parameter set to true",
                "example": [
                  5,
                  12,
                  24
                ]
              },
              "DBcustomExtension": {
                "properties": {
                  "DBcustomExtension.MyDBAttr2": {
                    "description": "Attribute DB Value",
                    "type": "string",
                    "example": "Attribute DB Value"
                  }
                }
              },
              "DBcustomAttributesGroup": {
                "properties": {
                  "DBcustomAttributesGroup.MyDBAttr3": {
                    "description": "Attribute DB Value",
                    "type": "string",
                    "example": "Attribute DB Value"
                  }
                }
              }
            }
          }
        }
      },
      "dseehw_EEHwInstance_PATCH": {
        "required": [
          "cestamp"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "My name"
          },
          "description": {
            "type": "string",
            "example": "My description"
          },
          "comConfigurationGwTimeBase": {
            "type": "number",
            "example": 0.005
          },
          "comConfigurationRxTimeBase": {
            "type": "number",
            "example": 0.005
          },
          "comConfigurationTxTimeBase": {
            "type": "number",
            "example": 0.005
          },
          "cestamp": {
            "type": "string",
            "example": "Timestamp id"
          },
          "customerAttributes": {
            "type": "object",
            "properties": {
              "DBCustomType.MyDBAttr1": {
                "description": "Attribute DB Value",
                "type": "string",
                "example": "Attribute DB Value"
              },
              "DBCustomType.MyMVA_string_DBAttr": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Multi Valuated Attribute string with $mva parameter set to true",
                "example": [
                  "Paris",
                  "London",
                  "Berlin"
                ]
              },
              "DBCustomType.MyMVA_integer_DBAttr": {
                "type": "array",
                "items": {
                  "type": "integer"
                },
                "description": "Multi Valuated Attribute integer with $mva parameter set to true",
                "example": [
                  5,
                  12,
                  24
                ]
              },
              "DBcustomExtension": {
                "properties": {
                  "DBcustomExtension.MyDBAttr2": {
                    "description": "Attribute DB Value",
                    "type": "string",
                    "example": "Attribute DB Value"
                  }
                }
              },
              "DBcustomAttributesGroup": {
                "properties": {
                  "DBcustomAttributesGroup.MyDBAttr3": {
                    "description": "Attribute DB Value",
                    "type": "string",
                    "example": "Attribute DB Value"
                  }
                }
              }
            }
          }
        }
      },
      "dseehw_EEHwConnectorType": {
        "required": [
          "title",
          "technology"
        ],
        "properties": {
          "title": {
            "type": "string",
            "example": "MyCustoEECANConnectorType"
          },
          "description": {
            "type": "string",
            "example": "My description"
          },
          "technology": {
            "type": "string",
            "example": "CANJ1939"
          },
          "subTechnology": {
            "type": "string",
            "example": "mySubTechnology"
          },
          "customerAttributes": {
            "type": "object",
            "properties": {
              "DBCustomType.MyDBAttr1": {
                "description": "Attribute DB Value",
                "type": "string",
                "example": "Attribute DB Value"
              },
              "DBCustomType.MyMVA_string_DBAttr": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Multi Valuated Attribute string with $mva parameter set to true",
                "example": [
                  "Paris",
                  "London",
                  "Berlin"
                ]
              },
              "DBCustomType.MyMVA_integer_DBAttr": {
                "type": "array",
                "items": {
                  "type": "integer"
                },
                "description": "Multi Valuated Attribute integer with $mva parameter set to true",
                "example": [
                  5,
                  12,
                  24
                ]
              },
              "DBcustomExtension": {
                "properties": {
                  "DBcustomExtension.MyDBAttr2": {
                    "description": "Attribute DB Value",
                    "type": "string",
                    "example": "Attribute DB Value"
                  }
                }
              },
              "DBcustomAttributesGroup": {
                "properties": {
                  "DBcustomAttributesGroup.MyDBAttr3": {
                    "description": "Attribute DB Value",
                    "type": "string",
                    "example": "Attribute DB Value"
                  }
                }
              }
            }
          },
          "dslog:LogItemEnterpriseAttributes": {
            "$ref": "#/components/schemas/dslog_LogItemEnterpriseAttributes"
          }
        }
      },
      "dseehw_EEHwConnectorType_PATCH": {
        "required": [
          "cestamp"
        ],
        "properties": {
          "title": {
            "type": "string",
            "example": "My title"
          },
          "description": {
            "type": "string",
            "example": "My description"
          },
          "subTechnology": {
            "type": "string",
            "example": "mySubTechnology"
          },
          "technology": {
            "type": "string",
            "example": "CANJ1939"
          },
          "cestamp": {
            "type": "string",
            "example": "Timestamp id"
          },
          "customerAttributes": {
            "type": "object",
            "properties": {
              "DBCustomType.MyDBAttr1": {
                "description": "Attribute DB Value",
                "type": "string",
                "example": "Attribute DB Value"
              },
              "DBCustomType.MyMVA_string_DBAttr": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Multi Valuated Attribute string with $mva parameter set to true",
                "example": [
                  "Paris",
                  "London",
                  "Berlin"
                ]
              },
              "DBCustomType.MyMVA_integer_DBAttr": {
                "type": "array",
                "items": {
                  "type": "integer"
                },
                "description": "Multi Valuated Attribute integer with $mva parameter set to true",
                "example": [
                  5,
                  12,
                  24
                ]
              },
              "DBcustomExtension": {
                "properties": {
                  "DBcustomExtension.MyDBAttr2": {
                    "description": "Attribute DB Value",
                    "type": "string",
                    "example": "Attribute DB Value"
                  }
                }
              },
              "DBcustomAttributesGroup": {
                "properties": {
                  "DBcustomAttributesGroup.MyDBAttr3": {
                    "description": "Attribute DB Value",
                    "type": "string",
                    "example": "Attribute DB Value"
                  }
                }
              }
            }
          },
          "dseehw:EEHwItemEnterpriseAttributes": {
            "$ref": "#/components/schemas/dslog_LogItemEnterpriseAttributes"
          }
        }
      },
      "dseehw_EEHwCommunicationConnector": {
        "required": [
          "name",
          "direction"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "My name"
          },
          "description": {
            "type": "string",
            "example": "My description"
          },
          "direction": {
            "type": "string",
            "example": 1
          },
          "isLinMasterController": {
            "type": "boolean",
            "example": true
          },
          "linProtocolVersion": {
            "type": "string",
            "example": "1.0.4"
          },
          "timeBase": {
            "type": "number",
            "example": 0.001
          },
          "flexRayLatestTx": {
            "type": "integer",
            "example": 1
          },
          "customerAttributes": {
            "type": "object",
            "properties": {
              "DBCustomType.MyDBAttr1": {
                "description": "Attribute DB Value",
                "type": "string",
                "example": "Attribute DB Value"
              },
              "DBCustomType.MyMVA_string_DBAttr": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Multi Valuated Attribute string with $mva parameter set to true",
                "example": [
                  "Paris",
                  "London",
                  "Berlin"
                ]
              },
              "DBCustomType.MyMVA_integer_DBAttr": {
                "type": "array",
                "items": {
                  "type": "integer"
                },
                "description": "Multi Valuated Attribute integer with $mva parameter set to true",
                "example": [
                  5,
                  12,
                  24
                ]
              },
              "DBcustomExtension": {
                "properties": {
                  "DBcustomExtension.MyDBAttr2": {
                    "description": "Attribute DB Value",
                    "type": "string",
                    "example": "Attribute DB Value"
                  }
                }
              },
              "DBcustomAttributesGroup": {
                "properties": {
                  "DBcustomAttributesGroup.MyDBAttr3": {
                    "description": "Attribute DB Value",
                    "type": "string",
                    "example": "Attribute DB Value"
                  }
                }
              }
            }
          }
        }
      },
      "dseehw_EEHwCommunicationConnector_PATCH": {
        "required": [
          "cestamp"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "My name"
          },
          "description": {
            "type": "string",
            "example": "My description"
          },
          "isLinMasterController": {
            "type": "boolean",
            "example": true
          },
          "linProtocolVersion": {
            "type": "string",
            "example": "1.0.4"
          },
          "timeBase": {
            "type": "number",
            "example": 0.001
          },
          "flexRayLatestTx": {
            "type": "integer",
            "example": 1
          },
          "cestamp": {
            "type": "string",
            "example": "Timestamp id"
          },
          "customerAttributes": {
            "type": "object",
            "properties": {
              "DBCustomType.MyDBAttr1": {
                "description": "Attribute DB Value",
                "type": "string",
                "example": "Attribute DB Value"
              },
              "DBCustomType.MyMVA_string_DBAttr": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Multi Valuated Attribute string with $mva parameter set to true",
                "example": [
                  "Paris",
                  "London",
                  "Berlin"
                ]
              },
              "DBCustomType.MyMVA_integer_DBAttr": {
                "type": "array",
                "items": {
                  "type": "integer"
                },
                "description": "Multi Valuated Attribute integer with $mva parameter set to true",
                "example": [
                  5,
                  12,
                  24
                ]
              },
              "DBcustomExtension": {
                "properties": {
                  "DBcustomExtension.MyDBAttr2": {
                    "description": "Attribute DB Value",
                    "type": "string",
                    "example": "Attribute DB Value"
                  }
                }
              },
              "DBcustomAttributesGroup": {
                "properties": {
                  "DBcustomAttributesGroup.MyDBAttr3": {
                    "description": "Attribute DB Value",
                    "type": "string",
                    "example": "Attribute DB Value"
                  }
                }
              }
            }
          }
        }
      },
      "createEEHardwareInstances": {
        "$ref": "#/components/schemas/createEEHardwareInstances_referencedObject"
      },
      "createEEHardwareReferences": {
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "customType",
                  "description": "EE Hardware Reference type : EETopology,EEECU,EESensor,EEActuator,EESwitch,EEDevice,EEElectricalDevice,  or one of its direct custom specialization sub-types"
                },
                "attributes": {
                  "$ref": "#/components/schemas/dseehw_EEHwItem"
                }
              }
            }
          }
        }
      },
      "deleteEEHardwareReferences": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "example": [
          "Item ID1",
          "Item ID2"
        ]
      },
      "createEEHardwareConnectorTypes": {
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "customType",
                  "description": "EE Hardware ConnectorType  type : EEConnectorType,EEGenericConnectorType or one of its direct custom specialization sub-types"
                },
                "attributes": {
                  "$ref": "#/components/schemas/dseehw_EEHwConnectorType"
                }
              }
            }
          }
        }
      },
      "createEEHardwareCommunicationConnectors": {
        "$ref": "#/components/schemas/createEEHardwareCommunicationConnectors_referencedObject"
      },
      "deleteEEHardwareInstances": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "example": [
          "Instance ID1",
          "Instance ID2"
        ]
      },
      "dsmveehw_EEHwItem.Mask.Reference.Details": {
        "properties": {
          "totalItems": {
            "type": "integer",
            "example": 1
          },
          "member": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Reference name",
                  "type": "string",
                  "example": "My name"
                },
                "title": {
                  "description": "Reference object title value",
                  "type": "string",
                  "example": "My title"
                },
                "description": {
                  "description": "Reference description value",
                  "type": "string",
                  "example": "My description"
                },
                "partNumber": {
                  "description": "Reference partNumber value",
                  "type": "string",
                  "example": "1234"
                },
                "id": {
                  "description": "Entity physical id",
                  "type": "string",
                  "example": "EE562168015FFCF14F940A513C63AA77"
                },
                "type": {
                  "description": "Basic type value",
                  "type": "string",
                  "example": "DBType"
                },
                "modified": {
                  "description": "Basic modified value",
                  "type": "string",
                  "example": "10/19/2021 10:58:01 PM"
                },
                "created": {
                  "description": "Object created value",
                  "type": "string",
                  "example": "10/19/2021 10:58:01 PM"
                },
                "revision": {
                  "description": "Object revision value",
                  "type": "string",
                  "example": "A.1"
                },
                "state": {
                  "description": "Object current state value",
                  "type": "string",
                  "example": "IN_WORK"
                },
                "owner": {
                  "description": "Object owner value",
                  "type": "string",
                  "example": "DB Owner"
                },
                "organization": {
                  "description": "Object organization value",
                  "type": "string",
                  "example": "MyCompany"
                },
                "collabspace": {
                  "description": "Object collabspace value",
                  "type": "string",
                  "example": "Default"
                },
                "dslog:LogItemEnterpriseAttributes": {
                  "properties": {
                    "XP_RFLVPMLogicalReference_Ext.MyDBAttr1": {
                      "description": "Attribute DB Value",
                      "type": "string",
                      "example": "Attribute DB Value"
                    },
                    "XP_RFLVPMFunctionalReference_Ext.MyMVA_string_DBAttr": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Multi Valuated Attribute string with $mva parameter set to true",
                      "example": [
                        "Copenhagen",
                        "Helsinki",
                        "Stockholm"
                      ]
                    },
                    "XP_RFLVPMFunctionalReference_Ext.MyMVA_integer_DBAttr": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      },
                      "description": "Multi Valuated Attribute integer with $mva parameter set to true",
                      "example": [
                        2,
                        4,
                        6
                      ]
                    }
                  }
                }
              }
            }
          },
          "nlsLabel": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "My Id translated value"
              },
              "type": {
                "type": "string",
                "example": "My Type translated value"
              },
              "modified": {
                "type": "string",
                "example": "My Modification Date translated value"
              },
              "created": {
                "type": "string",
                "example": "My Creation Date translated value"
              },
              "revision": {
                "type": "string",
                "example": "My Revision translated value"
              },
              "state": {
                "type": "string",
                "example": "My State translated value"
              },
              "owner": {
                "type": "string",
                "example": "My Owner translated value"
              }
            }
          }
        }
      },
      "dsmveehw_EEHwItem.Mask.Reference.Details_WithCEStamp": {
        "properties": {
          "totalItems": {
            "type": "integer",
            "example": 1
          },
          "member": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Reference name",
                  "type": "string",
                  "example": "My name"
                },
                "title": {
                  "description": "Reference object title value",
                  "type": "string",
                  "example": "My title"
                },
                "description": {
                  "description": "Reference description value",
                  "type": "string",
                  "example": "My description"
                },
                "partNumber": {
                  "description": "Reference partNumber value",
                  "type": "string",
                  "example": "1234"
                },
                "id": {
                  "description": "Entity physical id",
                  "type": "string",
                  "example": "EE562168015FFCF14F940A513C63AA77"
                },
                "type": {
                  "description": "Basic type value",
                  "type": "string",
                  "example": "DBType"
                },
                "modified": {
                  "description": "Basic modified value",
                  "type": "string",
                  "example": "10/19/2021 10:58:01 PM"
                },
                "created": {
                  "description": "Object created value",
                  "type": "string",
                  "example": "10/19/2021 10:58:01 PM"
                },
                "revision": {
                  "description": "Object revision value",
                  "type": "string",
                  "example": "A.1"
                },
                "state": {
                  "description": "Object current state value",
                  "type": "string",
                  "example": "IN_WORK"
                },
                "owner": {
                  "description": "Object owner value",
                  "type": "string",
                  "example": "DB Owner"
                },
                "organization": {
                  "description": "Object organization value",
                  "type": "string",
                  "example": "MyCompany"
                },
                "collabspace": {
                  "description": "Object collabspace value",
                  "type": "string",
                  "example": "Default"
                },
                "dslog:LogItemEnterpriseAttributes": {
                  "properties": {
                    "XP_RFLVPMLogicalReference_Ext.MyDBAttr1": {
                      "description": "Attribute DB Value",
                      "type": "string",
                      "example": "Attribute DB Value"
                    },
                    "XP_RFLVPMFunctionalReference_Ext.MyMVA_string_DBAttr": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Multi Valuated Attribute string with $mva parameter set to true",
                      "example": [
                        "Copenhagen",
                        "Helsinki",
                        "Stockholm"
                      ]
                    },
                    "XP_RFLVPMFunctionalReference_Ext.MyMVA_integer_DBAttr": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      },
                      "description": "Multi Valuated Attribute integer with $mva parameter set to true",
                      "example": [
                        2,
                        4,
                        6
                      ]
                    }
                  }
                },
                "cestamp": {
                  "description": "Object cestamp value",
                  "type": "string",
                  "example": "2D70169432D84866A200F907881AC9B1"
                }
              }
            }
          },
          "nlsLabel": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "My Id translated value"
              },
              "type": {
                "type": "string",
                "example": "My Type translated value"
              },
              "modified": {
                "type": "string",
                "example": "My Modification Date translated value"
              },
              "created": {
                "type": "string",
                "example": "My Creation Date translated value"
              },
              "revision": {
                "type": "string",
                "example": "My Revision translated value"
              },
              "state": {
                "type": "string",
                "example": "My State translated value"
              },
              "owner": {
                "type": "string",
                "example": "My Owner translated value"
              }
            }
          }
        }
      },
      "dsmveehw_EEHwInstance.Mask.Instance.Details": {
        "properties": {
          "totalItems": {
            "type": "integer",
            "example": 1
          },
          "member": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "Entity physical id",
                  "type": "string",
                  "example": "EE562168015FFCF14F940A513C63AA77"
                },
                "type": {
                  "description": "Basic type value",
                  "type": "string",
                  "example": "DBType"
                },
                "comConfigurationGwTimeBase": {
                  "type": "number",
                  "example": 0.005
                },
                "comConfigurationRxTimeBase": {
                  "type": "number",
                  "example": 0.005
                },
                "comConfigurationTxTimeBase": {
                  "type": "number",
                  "example": 0.005
                },
                "modified": {
                  "description": "Basic modified value",
                  "type": "string",
                  "example": "10/19/2021 10:58:01 PM"
                },
                "created": {
                  "description": "Object created value",
                  "type": "string",
                  "example": "10/19/2021 10:58:01 PM"
                },
                "name": {
                  "description": "Instance name",
                  "type": "string",
                  "example": "My name"
                },
                "description": {
                  "description": "Instance description vlaue",
                  "type": "string",
                  "example": "My description"
                },
                "referencedObject": {
                  "$ref": "#/components/schemas/response_referencedObject"
                }
              }
            }
          },
          "nlsLabel": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "My Id translated value"
              },
              "type": {
                "type": "string",
                "example": "My Type translated value"
              },
              "modified": {
                "type": "string",
                "example": "My Modification Date translated value"
              },
              "created": {
                "type": "string",
                "example": "My Creation Date translated value"
              }
            }
          }
        }
      },
      "dsmveehw_EEHwInstance.Mask.Instance.Details_WithCEStamp": {
        "properties": {
          "totalItems": {
            "type": "integer",
            "example": 1
          },
          "member": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "Entity physical id",
                  "type": "string",
                  "example": "EE562168015FFCF14F940A513C63AA77"
                },
                "type": {
                  "description": "Basic type value",
                  "type": "string",
                  "example": "DBType"
                },
                "modified": {
                  "description": "Basic modified value",
                  "type": "string",
                  "example": "10/19/2021 10:58:01 PM"
                },
                "comConfigurationGwTimeBase": {
                  "type": "number",
                  "example": 0.005
                },
                "comConfigurationRxTimeBase": {
                  "type": "number",
                  "example": 0.005
                },
                "comConfigurationTxTimeBase": {
                  "type": "number",
                  "example": 0.005
                },
                "created": {
                  "description": "Object created value",
                  "type": "string",
                  "example": "10/19/2021 10:58:01 PM"
                },
                "name": {
                  "description": "Instance name",
                  "type": "string",
                  "example": "My name"
                },
                "description": {
                  "description": "Instance description vlaue",
                  "type": "string",
                  "example": "My description"
                },
                "referencedObject": {
                  "$ref": "#/components/schemas/response_referencedObject"
                },
                "cestamp": {
                  "description": "Object cestamp value",
                  "type": "string",
                  "example": "2D70169432D84866A200F907881AC9B1"
                }
              }
            }
          },
          "nlsLabel": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "My Id translated value"
              },
              "type": {
                "type": "string",
                "example": "My Type translated value"
              },
              "modified": {
                "type": "string",
                "example": "My Modification Date translated value"
              },
              "created": {
                "type": "string",
                "example": "My Creation Date translated value"
              }
            }
          }
        }
      },
      "dsmveehw_EEHwCommunicationConnector.Mask": {
        "properties": {
          "totalItems": {
            "type": "integer",
            "example": 1
          },
          "member": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "Entity physical id",
                  "type": "string",
                  "example": "EE562168015FFCF14F940A513C63AA77"
                },
                "type": {
                  "description": "Basic type value",
                  "type": "string",
                  "example": "DBType"
                },
                "flexRayLatestTx": {
                  "description": "Hardware port flexRayLatestTx attribute value",
                  "type": "integer",
                  "example": "..."
                },
                "isLinMasterController": {
                  "description": "Hardware port isLinMasterController attribute value",
                  "type": "boolean",
                  "example": "true"
                },
                "linProtocolVersion": {
                  "description": "Hardware port Lin protocol version value",
                  "type": "string",
                  "example": "1.0.4"
                },
                "timeBase": {
                  "description": "Hardware port timeBase attribute value",
                  "type": "number",
                  "example": 0.001
                },
                "ipAddress": {
                  "description": "Hardware port ipaddress attribute value",
                  "type": "string",
                  "example": "My ipaddress"
                },
                "macAddress": {
                  "description": "Hardware port macAddress attribute value",
                  "type": "string",
                  "example": "My macaddress"
                },
                "macMulticastAddress": {
                  "description": "Hardware port macMulticastAddress attribute value",
                  "type": "string",
                  "example": "My mcMulticastAddress"
                },
                "tpAddress": {
                  "description": "Hardware port tpAddress attribute value",
                  "type": "string",
                  "example": "My tpAdress"
                },
                "tpProtocol": {
                  "description": "Hardware port tpProtocol attribute value",
                  "type": "string",
                  "example": "my tpProtocol"
                },
                "modified": {
                  "description": "Basic modified value",
                  "type": "string",
                  "example": "10/19/2021 10:58:01 PM"
                },
                "created": {
                  "description": "Object created value",
                  "type": "string",
                  "example": "10/19/2021 10:58:01 PM"
                },
                "name": {
                  "description": "Instance name",
                  "type": "string",
                  "example": "My name"
                },
                "description": {
                  "description": "Instance description vlaue",
                  "type": "string",
                  "example": "My description"
                },
                "referencedObject": {
                  "$ref": "#/components/schemas/response_referencedObject"
                }
              }
            }
          },
          "nlsLabel": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "My Id translated value"
              },
              "type": {
                "type": "string",
                "example": "My Type translated value"
              },
              "modified": {
                "type": "string",
                "example": "My Modification Date translated value"
              },
              "created": {
                "type": "string",
                "example": "My Creation Date translated value"
              }
            }
          }
        }
      },
      "dsmveehw_EEHwCommunicationConnector.Mask.Details_WithCEStamp": {
        "properties": {
          "totalItems": {
            "type": "integer",
            "example": 1
          },
          "member": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "Entity physical id",
                  "type": "string",
                  "example": "EE562168015FFCF14F940A513C63AA77"
                },
                "type": {
                  "description": "Basic type value",
                  "type": "string",
                  "example": "DBType"
                },
                "modified": {
                  "description": "Basic modified value",
                  "type": "string",
                  "example": "10/19/2021 10:58:01 PM"
                },
                "flexRayLatestTx": {
                  "description": "Hardware port flexRayLatestTx attribute value",
                  "type": "integer",
                  "example": "..."
                },
                "isLinMasterController": {
                  "description": "Hardware port isLinMasterController attribute value",
                  "type": "boolean",
                  "example": "true"
                },
                "linProtocolVersion": {
                  "description": "Hardware port Lin protocol version value",
                  "type": "string",
                  "example": "1.0.4"
                },
                "timeBase": {
                  "description": "Hardware port timeBase attribute value",
                  "type": "number",
                  "example": 0.001
                },
                "ipAddress": {
                  "description": "Hardware port ipaddress attribute value",
                  "type": "string",
                  "example": "My ipaddress"
                },
                "macAddress": {
                  "description": "Hardware port macAddress attribute value",
                  "type": "string",
                  "example": "My macaddress"
                },
                "macMulticastAddress": {
                  "description": "Hardware port macMulticastAddress attribute value",
                  "type": "string",
                  "example": "My mcMulticastAddress"
                },
                "tpAddress": {
                  "description": "Hardware port tpAddress attribute value",
                  "type": "string",
                  "example": "My tpAdress"
                },
                "tpProtocol": {
                  "description": "Hardware port tpProtocol attribute value",
                  "type": "string",
                  "example": "my tpProtocol"
                },
                "created": {
                  "description": "Object created value",
                  "type": "string",
                  "example": "10/19/2021 10:58:01 PM"
                },
                "name": {
                  "description": "Instance name",
                  "type": "string",
                  "example": "My name"
                },
                "description": {
                  "description": "Instance description vlaue",
                  "type": "string",
                  "example": "My description"
                },
                "referencedObject": {
                  "$ref": "#/components/schemas/response_referencedObject"
                },
                "cestamp": {
                  "description": "Object cestamp value",
                  "type": "string",
                  "example": "2D70169432D84866A200F907881AC9B1"
                }
              }
            }
          },
          "nlsLabel": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "My Id translated value"
              },
              "type": {
                "type": "string",
                "example": "My Type translated value"
              },
              "modified": {
                "type": "string",
                "example": "My Modification Date translated value"
              },
              "created": {
                "type": "string",
                "example": "My Creation Date translated value"
              }
            }
          }
        }
      },
      "dsmveno_DefaultBusMask.public": {
        "properties": {
          "totalItems": {
            "type": "integer",
            "example": 1
          },
          "member": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Reference name",
                  "type": "string",
                  "example": "My name"
                },
                "title": {
                  "description": "Reference object title value",
                  "type": "string",
                  "example": "My title"
                },
                "description": {
                  "description": "Reference description value",
                  "type": "string",
                  "example": "My description"
                },
                "id": {
                  "description": "Entity physical id",
                  "type": "string",
                  "example": "EE562168015FFCF14F940A513C63AA77"
                },
                "type": {
                  "description": "Basic type value",
                  "type": "string",
                  "example": "DBType"
                },
                "modified": {
                  "description": "Basic modified value",
                  "type": "string",
                  "example": "10/19/2021 10:58:01 PM"
                },
                "created": {
                  "description": "Object created value",
                  "type": "string",
                  "example": "10/19/2021 10:58:01 PM"
                },
                "revision": {
                  "description": "Object revision value",
                  "type": "string",
                  "example": "A.1"
                },
                "state": {
                  "description": "Object current state value",
                  "type": "string",
                  "example": "IN_WORK"
                },
                "owner": {
                  "description": "Object owner value",
                  "type": "string",
                  "example": "DB Owner"
                },
                "organization": {
                  "description": "Object organization value",
                  "type": "string",
                  "example": "MyCompany"
                },
                "collabspace": {
                  "description": "Object collabspace value",
                  "type": "string",
                  "example": "Default"
                }
              }
            }
          },
          "nlsLabel": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "My Id translated value"
              },
              "type": {
                "type": "string",
                "example": "My Type translated value"
              },
              "modified": {
                "type": "string",
                "example": "My Modification Date translated value"
              },
              "created": {
                "type": "string",
                "example": "My Creation Date translated value"
              },
              "revision": {
                "type": "string",
                "example": "My Revision translated value"
              },
              "state": {
                "type": "string",
                "example": "My State translated value"
              },
              "owner": {
                "type": "string",
                "example": "My Owner translated value"
              }
            }
          }
        }
      },
      "dsmveehw_EEHwConnectorType.Mask": {
        "properties": {
          "totalItems": {
            "type": "integer",
            "example": 1
          },
          "member": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Hardware ConnectorType  object name",
                  "type": "string",
                  "example": "My name"
                },
                "title": {
                  "description": "Hardware ConnectorType  object name",
                  "type": "string",
                  "example": "My title"
                },
                "description": {
                  "description": "Hardware ConnectorType  description value",
                  "type": "string",
                  "example": "My description"
                },
                "subTechnology": {
                  "description": "The Hardware ConnectorType  subTechnology value",
                  "type": "string",
                  "example": "a subTechnology"
                },
                "linkTechnology": {
                  "description": "The Hardware ConnectorType  linkTechnology value:  WiredLink,Wireless,CAN,CAN FD,CAN Extended,CAN J1939,CAN TP,MilCAN,LIN,FlexRay,Ethernet,AFDX/ARINC664,MOST,K-BUS,Other,ARINC429,MIL-STD-1553B",
                  "type": "string",
                  "example": "CAN"
                },
                "id": {
                  "description": "Entity physical id",
                  "type": "string",
                  "example": "EE562168015FFCF14F940A513C63AA77"
                },
                "type": {
                  "description": "Basic type value",
                  "type": "string",
                  "example": "DBType"
                },
                "modified": {
                  "description": "Basic modified value",
                  "type": "string",
                  "example": "10/19/2021 10:58:01 PM"
                },
                "created": {
                  "description": "Object created value",
                  "type": "string",
                  "example": "10/19/2021 10:58:01 PM"
                },
                "revision": {
                  "description": "Object revision value",
                  "type": "string",
                  "example": "A.1"
                },
                "state": {
                  "description": "Object current state value",
                  "type": "string",
                  "example": "IN_WORK"
                },
                "owner": {
                  "description": "Object owner value",
                  "type": "string",
                  "example": "DB Owner"
                },
                "organization": {
                  "description": "Object organization value",
                  "type": "string",
                  "example": "MyCompany"
                },
                "collabspace": {
                  "description": "Object collabspace value",
                  "type": "string",
                  "example": "Default"
                },
                "dslog:LogItemEnterpriseAttributes": {
                  "properties": {
                    "XP_RFLVPMLogicalReference_Ext.MyDBAttr1": {
                      "description": "Attribute DB Value",
                      "type": "string",
                      "example": "Attribute DB Value"
                    },
                    "XP_RFLVPMFunctionalReference_Ext.MyMVA_string_DBAttr": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Multi Valuated Attribute string with $mva parameter set to true",
                      "example": [
                        "Copenhagen",
                        "Helsinki",
                        "Stockholm"
                      ]
                    },
                    "XP_RFLVPMFunctionalReference_Ext.MyMVA_integer_DBAttr": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      },
                      "description": "Multi Valuated Attribute integer with $mva parameter set to true",
                      "example": [
                        2,
                        4,
                        6
                      ]
                    }
                  }
                }
              }
            }
          },
          "nlsLabel": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "My Id translated value"
              },
              "type": {
                "type": "string",
                "example": "My Type translated value"
              },
              "modified": {
                "type": "string",
                "example": "My Modification Date translated value"
              },
              "created": {
                "type": "string",
                "example": "My Creation Date translated value"
              },
              "revision": {
                "type": "string",
                "example": "My Revision translated value"
              },
              "state": {
                "type": "string",
                "example": "My State translated value"
              },
              "owner": {
                "type": "string",
                "example": "My Owner translated value"
              }
            }
          }
        }
      },
      "dsmveehw_EEHwConnectorType.Mask.Details_WithCEStamp": {
        "properties": {
          "totalItems": {
            "type": "integer",
            "example": 1
          },
          "member": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Reference name",
                  "type": "string",
                  "example": "My name"
                },
                "title": {
                  "description": "Reference object title value",
                  "type": "string",
                  "example": "My title"
                },
                "description": {
                  "description": "Reference description value",
                  "type": "string",
                  "example": "My description"
                },
                "subTechnology": {
                  "description": "The Hardware ConnectorType  subTechnology value",
                  "type": "string",
                  "example": "a subTechnology"
                },
                "linkTechnology": {
                  "description": "The Hardware ConnectorType  linkTechnology value: WiredLink,Wireless,CAN,CAN FD,CAN Extended,CAN J1939,CAN TP,MilCAN,LIN,FlexRay,Ethernet,AFDX/ARINC664,MOST,K-BUS,Other,ARINC429,MIL-STD-1553B",
                  "type": "string",
                  "example": "CAN"
                },
                "id": {
                  "description": "Entity physical id",
                  "type": "string",
                  "example": "EE562168015FFCF14F940A513C63AA77"
                },
                "type": {
                  "description": "Basic type value",
                  "type": "string",
                  "example": "DBType"
                },
                "modified": {
                  "description": "Basic modified value",
                  "type": "string",
                  "example": "10/19/2021 10:58:01 PM"
                },
                "created": {
                  "description": "Object created value",
                  "type": "string",
                  "example": "10/19/2021 10:58:01 PM"
                },
                "revision": {
                  "description": "Object revision value",
                  "type": "string",
                  "example": "A.1"
                },
                "state": {
                  "description": "Object current state value",
                  "type": "string",
                  "example": "IN_WORK"
                },
                "owner": {
                  "description": "Object owner value",
                  "type": "string",
                  "example": "DB Owner"
                },
                "organization": {
                  "description": "Object organization value",
                  "type": "string",
                  "example": "MyCompany"
                },
                "collabspace": {
                  "description": "Object collabspace value",
                  "type": "string",
                  "example": "Default"
                },
                "dslog:LogItemEnterpriseAttributes": {
                  "properties": {
                    "XP_RFLVPMLogicalReference_Ext.MyDBAttr1": {
                      "description": "Attribute DB Value",
                      "type": "string",
                      "example": "Attribute DB Value"
                    },
                    "XP_RFLVPMFunctionalReference_Ext.MyMVA_string_DBAttr": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Multi Valuated Attribute string with $mva parameter set to true",
                      "example": [
                        "Copenhagen",
                        "Helsinki",
                        "Stockholm"
                      ]
                    },
                    "XP_RFLVPMFunctionalReference_Ext.MyMVA_integer_DBAttr": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      },
                      "description": "Multi Valuated Attribute integer with $mva parameter set to true",
                      "example": [
                        2,
                        4,
                        6
                      ]
                    }
                  }
                },
                "cestamp": {
                  "description": "Object cestamp value",
                  "type": "string",
                  "example": "2D70169432D84866A200F907881AC9B1"
                }
              }
            }
          },
          "nlsLabel": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "My Id translated value"
              },
              "type": {
                "type": "string",
                "example": "My Type translated value"
              },
              "modified": {
                "type": "string",
                "example": "My Modification Date translated value"
              },
              "created": {
                "type": "string",
                "example": "My Creation Date translated value"
              },
              "revision": {
                "type": "string",
                "example": "My Revision translated value"
              },
              "state": {
                "type": "string",
                "example": "My State translated value"
              },
              "owner": {
                "type": "string",
                "example": "My Owner translated value"
              }
            }
          }
        }
      },
      "dsmveno_DefaultBusMask.public_WithCEStamp": {
        "properties": {
          "totalItems": {
            "type": "integer",
            "example": 1
          },
          "member": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Reference name",
                  "type": "string",
                  "example": "My name"
                },
                "title": {
                  "description": "Reference object title value",
                  "type": "string",
                  "example": "My title"
                },
                "description": {
                  "description": "Reference description value",
                  "type": "string",
                  "example": "My description"
                },
                "id": {
                  "description": "Entity physical id",
                  "type": "string",
                  "example": "EE562168015FFCF14F940A513C63AA77"
                },
                "type": {
                  "description": "Basic type value",
                  "type": "string",
                  "example": "DBType"
                },
                "modified": {
                  "description": "Basic modified value",
                  "type": "string",
                  "example": "10/19/2021 10:58:01 PM"
                },
                "created": {
                  "description": "Object created value",
                  "type": "string",
                  "example": "10/19/2021 10:58:01 PM"
                },
                "revision": {
                  "description": "Object revision value",
                  "type": "string",
                  "example": "A.1"
                },
                "state": {
                  "description": "Object current state value",
                  "type": "string",
                  "example": "IN_WORK"
                },
                "owner": {
                  "description": "Object owner value",
                  "type": "string",
                  "example": "DB Owner"
                },
                "organization": {
                  "description": "Object organization value",
                  "type": "string",
                  "example": "MyCompany"
                },
                "collabspace": {
                  "description": "Object collabspace value",
                  "type": "string",
                  "example": "Default"
                },
                "cestamp": {
                  "description": "Object cestamp value",
                  "type": "string",
                  "example": "2D70169432D84866A200F907881AC9B1"
                }
              }
            }
          },
          "nlsLabel": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "My Id translated value"
              },
              "type": {
                "type": "string",
                "example": "My Type translated value"
              },
              "modified": {
                "type": "string",
                "example": "My Modification Date translated value"
              },
              "created": {
                "type": "string",
                "example": "My Creation Date translated value"
              },
              "revision": {
                "type": "string",
                "example": "My Revision translated value"
              },
              "state": {
                "type": "string",
                "example": "My State translated value"
              },
              "owner": {
                "type": "string",
                "example": "My Owner translated value"
              }
            }
          }
        }
      },
      "dsmveno_DefaultRelMask.public": {
        "properties": {
          "totalItems": {
            "type": "integer",
            "example": 1
          },
          "member": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "Entity physical id",
                  "type": "string",
                  "example": "EE562168015FFCF14F940A513C63AA77"
                },
                "type": {
                  "description": "Basic type value",
                  "type": "string",
                  "example": "DBType"
                },
                "modified": {
                  "description": "Basic modified value",
                  "type": "string",
                  "example": "10/19/2021 10:58:01 PM"
                },
                "created": {
                  "description": "Object created value",
                  "type": "string",
                  "example": "10/19/2021 10:58:01 PM"
                },
                "name": {
                  "description": "Instance name",
                  "type": "string",
                  "example": "My name"
                },
                "description": {
                  "description": "Instance description vlaue",
                  "type": "string",
                  "example": "My description"
                }
              }
            }
          },
          "nlsLabel": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "My Id translated value"
              },
              "type": {
                "type": "string",
                "example": "My Type translated value"
              },
              "modified": {
                "type": "string",
                "example": "My Modification Date translated value"
              },
              "created": {
                "type": "string",
                "example": "My Creation Date translated value"
              }
            }
          }
        }
      },
      "dsmveno_DefaultRelMask.public_WithCEStamp": {
        "properties": {
          "totalItems": {
            "type": "integer",
            "example": 1
          },
          "member": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "Entity physical id",
                  "type": "string",
                  "example": "EE562168015FFCF14F940A513C63AA77"
                },
                "type": {
                  "description": "Basic type value",
                  "type": "string",
                  "example": "DBType"
                },
                "modified": {
                  "description": "Basic modified value",
                  "type": "string",
                  "example": "10/19/2021 10:58:01 PM"
                },
                "created": {
                  "description": "Object created value",
                  "type": "string",
                  "example": "10/19/2021 10:58:01 PM"
                },
                "name": {
                  "description": "Instance name",
                  "type": "string",
                  "example": "My name"
                },
                "description": {
                  "description": "Instance description vlaue",
                  "type": "string",
                  "example": "My description"
                },
                "cestamp": {
                  "description": "Object cestamp value",
                  "type": "string",
                  "example": "2D70169432D84866A200F907881AC9B1"
                }
              }
            }
          },
          "nlsLabel": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "My Id translated value"
              },
              "type": {
                "type": "string",
                "example": "My Type translated value"
              },
              "modified": {
                "type": "string",
                "example": "My Modification Date translated value"
              },
              "created": {
                "type": "string",
                "example": "My Creation Date translated value"
              }
            }
          }
        }
      },
      "createEEHardwareInstances_referencedItem": {
        "properties": {
          "instances": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "customType",
                  "description": "RFLVPMLogicalReference or one of its direct custom specialization sub-types"
                },
                "attributes": {
                  "$ref": "#/components/schemas/dseehw_EEHwInstance"
                },
                "referencedItem": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "My type"
                    },
                    "attributes": {
                      "$ref": "#/components/schemas/dseehw_EEHwItem"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "createEEHardwareInstances_referencedObject": {
        "properties": {
          "instances": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "customType"
                },
                "attributes": {
                  "$ref": "#/components/schemas/dseehw_EEHwInstance"
                },
                "referencedObject": {
                  "$ref": "#/components/schemas/payload_referencedObject"
                }
              }
            }
          }
        }
      },
      "createEEHardwareCommunicationConnectors_referencedObject": {
        "properties": {
          "instances": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "customLINTechnoConnector"
                },
                "attributes": {
                  "$ref": "#/components/schemas/dseehw_EEHwCommunicationConnector"
                },
                "referencedObject": {
                  "$ref": "#/components/schemas/payload_Itf_referencedObject"
                }
              }
            }
          }
        }
      },
      "payload_referencedObject": {
        "required": [
          "source",
          "type",
          "identifier",
          "relativePath"
        ],
        "type": "object",
        "properties": {
          "source": {
            "type": "string",
            "example": "https://ServerName/3DSpace"
          },
          "type": {
            "type": "string",
            "example": "dseehw:EEHwItem"
          },
          "identifier": {
            "type": "string",
            "example": "EE562168015FFCF14F940A513C63AA77"
          },
          "relativePath": {
            "type": "string",
            "example": "/resources/v1/modeler/dseehw/dseehw:EEHwItem/EE562168015FFCF14F940A513C63AA77"
          }
        }
      },
      "response_referencedObject": {
        "type": "object",
        "properties": {
          "source": {
            "type": "string",
            "example": "https://ServerName/3DSpace"
          },
          "type": {
            "type": "string",
            "example": "dseehw:EEHwItem"
          },
          "identifier": {
            "type": "string",
            "example": "EE562168015FFCF14F940A513C63AA77"
          },
          "relativePath": {
            "type": "string",
            "example": "/resources/v1/dseehw/dseehw:EEHwItem/EE562168015FFCF14F940A513C63AA77"
          }
        }
      },
      "payload_Itf_referencedObject": {
        "required": [
          "source",
          "type",
          "identifier",
          "relativePath"
        ],
        "type": "object",
        "properties": {
          "source": {
            "type": "string",
            "example": "https://ServerName/3DSpace"
          },
          "type": {
            "type": "string",
            "example": "dseehw:EEHwConnectorType"
          },
          "identifier": {
            "type": "string",
            "example": "EE562168015FFCF14F940A513C63AA77"
          },
          "relativePath": {
            "type": "string",
            "example": "/resources/v1/dseehw/dseehw:EEHwConnectorType/EE562168015FFCF14F940A513C63AA77"
          }
        }
      },
      "dslog_LogItemEnterpriseAttributes": {
        "properties": {
          "LogicalReference_MyDBAttr4": {
            "description": "Attribute DB Value",
            "type": "string",
            "example": "Attribute DB Value"
          },
          "LogicalReference_MyMVA_string_DBAttr": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Multi Valuated Attribute string with $mva parameter set to true",
            "example": [
              "Copenhagen",
              "Helsinki",
              "Stockholm"
            ]
          },
          "LogicalReference_MyMVA_integer_DBAttr": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "Multi Valuated Attribute integer with $mva parameter set to true",
            "example": [
              2,
              4,
              6
            ]
          }
        }
      }
    }
  }
}
