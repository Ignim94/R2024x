# @fullReview  yoq  11/02/2017  Initial Version
# This property declares the registration impl files for all the applications which are going to use ENOXRestInfra and masks services.
# This is the single entry point for all applications which are going to leverage the infra. 


emxXSourcing.license.config.part_request=ENXNCRS_TP,ENXCRMS_TP
emxXSourcing.license.config.request_template=ENXCRMS_TP
emxXSourcing.license.config.qualification=ENXSPIS_TP
emxXSourcing.license.config.qualification.create=ENXSPIS_TP,ENXSPIQ_TP,ENXRFXS_TP
emxXSourcing.license.config.lifecycle=ENXNCRS_TP,ENXCRMS_TP,ENXSPIS_TP

3DSpace = com.dassault_systemes.xsourcing.services.implementations.ENOXSourcingERInfra
enovia  = com.dassault_systemes.xsourcing.services.implementations.ENOXSourcingERInfra



#page configurations
emxXSourcing.page.trigger.config.SRC_Attribute_Group=dssourcing:SRC_RFQAttributeGroup_State
emxXSourcing.page.trigger.config.SRC_Part_Request=dssourcing:SRCPartRequest_State
emxXSourcing.page.trigger.config.SRC_Request_Template=dssourcing:SRCRequestTemplate_State
emxXSourcing.page.trigger.config.SRC_RFQ=dssourcing:SRC_RFQ_State
emxXSourcing.page.trigger.config.SRC_RFQAttributeGroup=dssourcing:SRC_RFQAttributeGroup_State

emxXSourcing.page.trigger.config.delete.SRC_RFQ=dssourcing:SRC_RFQ_Delete
emxXSourcing.page.trigger.config.delete.SRC_Attribute_Group=dssourcing:SRC_RFQAttributeGroup_Delete
emxXSourcing.page.trigger.config.delete.SRC_RFQAttributeGroup=dssourcing:SRC_RFQAttributeGroup_Delete
emxXSourcing.page.trigger.config.delete.SRC_Part_Request=dssourcing:SRCPartRequest_Delete

emxXSourcing.service.name=Sourcing

emxXSourcing.service.proxyTypes=Classification,Document,VPMReference,Route,Route Template
emxXSourcing.service.3dspace=3dspace
emxXSourcing.type.Classification.relativePath=/v1/modeler/3DSpace/Classification
emxXSourcing.type.Document.relativePath=/v1/modeler/3DSpace/Document
emxXSourcing.type.VPMReference.relativePath=/v1/modeler/3DSpace/VPMReference
emxXSourcing.type.Route.relativePath=/v1/modeler/3DSpace/Route
emxXSourcing.type.Route_Template.relativePath=/v1/modeler/3DSpace/RouteTemplate

emxXSourcing.Request_Template.Interface.default=SRC Component Introduction Request
emxXSourcing.type.SRC_RFQAttributeGroup.relativePath=/v1/modeler/dssourcing/attributes_groups
emxXSourcing.type.SRC_RFQ.relativePath=/v1/modeler/dssourcing/rfqs

emxXSourcing.payload.queryLimit=500

#For history component
emxXSourcing.ObjectHistory.maxRecords=2000
emxXSourcing.ObjectHistory.allowedActions=create,connect,disconnect,promote,demote,modify

#Date formats
emxXSourcing.dateformats.utc=yyyy-MM-dd'T'HH:mm:ss.SSS'Z'
emxXSourcing.dateformats.database=MM/dd/yyyy hh:mm:ss a
emxXSourcing.dateformats.sourcingendpoint.accepted=yyyy-MM-dd'T'HH:mm:ss.SSS'Z',MM/dd/yyyy hh:mm:ss a,EEE MMM d yyyy,MM/dd/yyyy

# Filters Supported & a default filter - If a new filter is added here, its equivalent DB where clause should be added in subsequent section. If it is not added, no where clause will be considered
emxXSourcing.srcrequest.filters = active,approved,cancelled,rejected,all
emxXSourcing.srcrequest.default.filter = active

#Generic Pattern: emxXSourcing.queryParam.filter.<TYPE>.keys.<KEY> = <DB Where Clause>
emxXSourcing.queryParam.filter.srcrequest.keys.active = current != Completed && current != Closed 
emxXSourcing.queryParam.filter.srcrequest.keys.approved = attribute[SRCREQUEST.CompletionStatus].value == Approved
emxXSourcing.queryParam.filter.srcrequest.keys.cancelled = attribute[SRCREQUEST.CompletionStatus].value == Cancelled
emxXSourcing.queryParam.filter.srcrequest.keys.rejected = attribute[SRCREQUEST.CompletionStatus].value == Rejected

#Public API - Actual Type to Proxy Type Map
emxXSourcing.ActualToProxy.TypeMap.Manufacturer_Equivalent_Item = SRC Manufacturer Equivalent Item Proxy Item
emxXSourcing.ActualToProxy.TypeMap.Physical_Product = SRC Engineering Item Proxy Item
emxXSourcing.ActualToProxy.TypeMap.Plant = Plant Proxy Item
emxXSourcing.ActualToProxy.TypeMap.Project_Space = Project Proxy Item
emxXSourcing.ActualToProxy.TypeMap.Model = Model Proxy Item
emxXSourcing.ActualToProxy.TypeMap.Products = Model Version Proxy Item
emxXSourcing.ActualToProxy.TypeMap.Requirement_Group = Requirement Group Proxy Item
emxXSourcing.ActualToProxy.TypeMap.Requirement = Requirement Proxy Item
emxXSourcing.ActualToProxy.TypeMap.Product_Configuration = Product Configuration Proxy Item
emxXSourcing.ActualToProxy.TypeMap.VPMReference = SRC Engineering Item Proxy Item
emxXSourcing.ActualToProxy.TypeMap.RFLVPMLogicalReference = Logical Reference Proxy Item
emxXSourcing.ActualToProxy.TypeMap.RFLVPMServicesReference = Services Reference Proxy Item
emxXSourcing.ActualToProxy.TypeMap.DELFmiFunctionReference = SRC Manufacturing Item Proxy Item
emxXSourcing.ActualToProxy.TypeMap.Document= Document Proxy Item
emxXSourcing.ActualToProxy.TypeMap.RFLPLMFunctionalReference= Functional Reference Proxy Item
emxXSourcing.ActualToProxy.TypeMap.Requirement_Specification= Requirement Specification Proxy Item
emxXSourcing.ActualToProxy.TypeMap.dsplan_Project= Project Proxy Item
emxXSourcing.ActualToProxy.TypeMap.QualificationProof=Qualification Proof Proxy Item
emxXSourcing.SRCRequest.PolicyMapping = {\"SRC Component Introduction Request V1\": \"SRCNewOrModificationComponentRequest\", \"SRC Component Modification Request\": \"SRCNewOrModificationComponentRequest\", \"SRC Source Change Notification V1\": \"SRCSourceChangeNotificationComponentRequest\"}

emxXSourcing.ActualToProxy.AllowedType = Manufacturer Equivalent Item,Requirement Group,Requirement,Requirement Specification,Model,Products,Product Configuration,VPMReference,RFLVPMLogicalReference,RFLPLMFunctionalReference,RFLVPMServicesReference,DELFmiFunctionReference,Plant,Project Space,Physical Product,dsplan:Project

emxXSourcing.qualification.proof.allowedstate = In Draft,In Work
emxXSourcing.qualification.proof.allowedtypes = Document,VV_Test_Specification
